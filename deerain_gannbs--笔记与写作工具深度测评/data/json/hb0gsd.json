{
  "body_html": "<!doctype html><div class=\"lake-content\" typography=\"classic\"><div data-type=\"success\" class=\"ne-alert\"><p id=\"u6903ff08\" class=\"ne-p\"><span class=\"ne-text\">关键词\t：知识管理，笔记方法，url scheme，map of contents</span></p><p id=\"udd9d5be7\" class=\"ne-p\"><span class=\"ne-text\">字数\t\t：1w</span></p><p id=\"ubba777b7\" class=\"ne-p\"><span class=\"ne-text\">使用工具\t：使用 {Writeathon + Scapple + 思源笔记} 编写，首发于语雀</span></p></div><h1 id=\"25591b31\"><span class=\"ne-text\">从 org-mode 中的文件链接说起</span></h1><p id=\"u2761a275\" class=\"ne-p\"><span class=\"ne-text\">虽然上手有一定成本，但 Emacs 中的 org-mode 直到今天依然是最强大的大纲编辑器，很多人都用它来记录笔记，在 *nix 系统上，配合</span><a href=\"https://github.com/redguardtoo/emacs.d\" data-href=\"https://github.com/redguardtoo/emacs.d\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">陈斌的个人配置</span></a><span class=\"ne-text\">中的 </span><code class=\"ne-code\"><span class=\"ne-text\">narrow-or-widen-dwim</span></code><span class=\"ne-text\"> 函数，把所有内容都写到一个文件里也能有很好的操作体验。但是我一直有跨平台的需求，所以被迫拆出了很多个不那么长的 org 文件，并用侧栏目录树插件来管理。</span></p><p id=\"u455a6e77\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"ue92c5e80\" class=\"ne-p\"><span class=\"ne-text\">后来遇到了两个问题，如果这些 org 文件完全不分类，我也可以通过 Emacs 里超强的搜索插件快速定位到具体的内容，但是缺少一种「鸟瞰」整个笔记仓库的手段；可如果这些 org 文件按照文件夹分类，也会遇到一些老生常谈的树状管理弊端，比如一个文件不能同时出现在两个目录里，用符号链接的话在目录变动的时候又很麻烦，而且目录树插件的手感并不算很好。</span></p><p id=\"u22d7df8f\" class=\"ne-p\"><br></p><p id=\"uf6f1ffd8\" class=\"ne-p\"><span class=\"ne-text\">我解决这些问题的方法就是把所有的 org 文件放在同一个目录下，同时建立一个叫 0-index.org 的文件，所有 org 文件都以链接的形式存在于 0-index.org 中，同时，新建文件的时候也直接在这个文件里用「空链接」来新建：</span></p><p id=\"u2b2cd43d\" class=\"ne-p\"><br></p><p id=\"u7939e2e2\" class=\"ne-p\" style=\"text-align: center\"><img src=\"https://b3logfile.com/siyuan/1605629299270/assets/image-20210617171345-j3bxhoi.png\" width=\"457\" id=\"OSeSw\" class=\"ne-image\"></p><p id=\"ue9c60dcf\" class=\"ne-p\"><br></p><p id=\"u05fcadb3\" class=\"ne-p\"><span class=\"ne-text\">这种做法瞬间解决了所有的问题，首先，正经配置过的 org-mode 是最强大的大纲编辑器，在这个文件中浏览和查看所有笔记的手感比用任何文件管理工具都舒服，把一条笔记的从一个分类移动到另一个分类、其实就是在移动一行文字，这对用上了 Evil 插件的 Emacs 来说实在是小菜一碟。同时，这个 0-index.org 文件弥补了本地文件系统的弊端，如果想让某条笔记同时出现在两个分类下，只要把那一行文字复制一遍就行了：</span></p><p id=\"u00fb0d0a\" class=\"ne-p\"><br></p><p id=\"u095a35f6\" class=\"ne-p\" style=\"text-align: center\"><img src=\"https://b3logfile.com/siyuan/1605629299270/assets/image-20210617172710-kttyrx7.png\" width=\"305\" id=\"rMrC7\" class=\"ne-image\"></p><p id=\"u3a3c6bde\" class=\"ne-p\"><br></p><p id=\"u86dc67bc\" class=\"ne-p\"><span class=\"ne-text\">在 org-mode 中我还有很多围绕 0-index.org 的高效技巧，比如通过稀疏树筛选达到文件标签的效果、或者添加描述文字来让全局搜索一步到位，不过那些都不那么重要，这种视角的初步转换才是最大的突破——</span><strong><span class=\"ne-text\">凭什么分类体系必须体现在文件树上呢？</span></strong></p><p id=\"u741e946d\" class=\"ne-p\"><br></p><p id=\"uc3e416d9\" class=\"ne-p\"><span class=\"ne-text\">至于要不要做分类、分类要做到什么程度，那完全是另一个话题了。</span></p><h1 id=\"78361205\"><span class=\"ne-text\">站在大气层看 map of contents</span></h1><p id=\"u55a109dc\" class=\"ne-p\"><span class=\"ne-text\">别的笔记类软件我也经常深度试用，有一些还重度用过很长时间，最明显的感受就是大多数软件「自带」的内容组织功能太差，「文档树加标签」的形式落实到软件层面的时候远远比不上我的一个 org 索引文件，因为 org-mode 这样的大纲编辑器用来管理笔记链接实在太适合了。</span></p><p id=\"ueb1c8aa5\" class=\"ne-p\"><br></p><p id=\"ue3ff84a6\" class=\"ne-p\"><span class=\"ne-text\">问题光考虑到这个地步还不够，除了大纲（列表），是不是还有别的更好的形式来组织这些链接？只要用过 tiddlywiki，这个问题瞬间就能得到圆满解答。在重度使用 tiddlywiki 的过程中，我经常使用 wikitext 强大的表格（相对于 markdown 表格而言）来汇总内容，</span><strong><span class=\"ne-text\">而这些表格中的元素，可以是链接</span></strong><span class=\"ne-text\">：</span></p><p id=\"ub5fa18fd\" class=\"ne-p\"><br></p><p id=\"uf8e2d630\" class=\"ne-p\" style=\"text-align: center\"><img src=\"https://b3logfile.com/siyuan/1605629299270/assets/image-20210617214259-mdexma7.png\" width=\"455\" id=\"VIcWn\" class=\"ne-image\"></p><p id=\"uc69aa36d\" class=\"ne-p\"><br></p><p id=\"u572a001b\" class=\"ne-p\"><span class=\"ne-text\">现在除了列表，管理链接的方式又多了一种。表格是一种非常实用的形式，不同于列表的可操作性，静态表格能比较好地利用屏幕空间并对比展示。</span></p><p id=\"u958a0b45\" class=\"ne-p\"><br></p><p id=\"u3e0e37f3\" class=\"ne-p\"><span class=\"ne-text\">除了表格，第三类管理链接的方式也可以直接在 tiddlywiki 中找到，那就是图形化的界面。tiddlywiki 有一个叫做 tiddlymap 的强大插件，可以</span><strong><span class=\"ne-text\">手动</span></strong><span class=\"ne-text\">创建</span><strong><span class=\"ne-text\">位置固定</span></strong><span class=\"ne-text\">的图形：</span></p><p id=\"u50abe69a\" class=\"ne-p\"><br></p><p id=\"uba753567\" class=\"ne-p\" style=\"text-align: center\"><img src=\"https://b3logfile.com/siyuan/1605629299270/assets/image-20210617215850-4pg1qgj.png\" width=\"551\" id=\"AptiD\" class=\"ne-image\"></p><p id=\"u9e576e64\" class=\"ne-p\"><br></p><p id=\"ua9395ae6\" class=\"ne-p\"><span class=\"ne-text\">在上图中，每个节点就是一个链接，指向 tiddlywiki 中的一条笔记，点击可以打开该笔记。这种图形携带了丰富的背景信息，每条链接可以添加标注，并且每个节点可以做到手动创建并固定位置，比双链笔记那种毫无价值的图谱不知道高到哪里去了（安，后面会详细 diss）。</span></p><p id=\"ud8516f33\" class=\"ne-p\"><br></p><p id=\"ub0869b9d\" class=\"ne-p\"><span class=\"ne-text\">至此，三类管理链接的方法集齐了。</span></p><p id=\"ueac06d91\" class=\"ne-p\"><br></p><p id=\"u9b9cedfb\" class=\"ne-p\"><span class=\"ne-text\">emacs+org-mode 和 tiddlywiki+tiddlymap 都是难上手、难配置的工具，但是它们的创造者和背后的社区生态确实能给人很多超前的启发。所以后来 moc（map of contents）这个词在双向链接时代跟着 Obsidian 一起火起来的时候，我不仅完全不觉得惊艳，还觉得 nick milo 对这套方法的探索还停留在初级阶段。我现在也用 moc 这个词，仅仅是因为它流传程度比较高。</span></p><p id=\"u62842966\" class=\"ne-p\"><br></p><p id=\"u7f335bb4\" class=\"ne-p\"><span class=\"ne-text\">不过 nick milo 有一句话说得很对，moc 确实是 game changer。如果要描述 moc 的真正内涵，我觉得下面这句话还是很到位的：</span></p><p id=\"ue8951dac\" class=\"ne-p\"><br></p><div class=\"ne-quote\"><p id=\"u0c5ae809\" class=\"ne-p\"><span class=\"ne-text\">比起管理本体，不如管理链接，因为管理链接的手段比管理本体的手段更多更好，这些手段具体来说就是列表、表格和图形这三大类。</span></p></div><h1 id=\"b098e8c7\"><span class=\"ne-text\">先决条件：提供链接</span></h1><p id=\"u9074ca3d\" class=\"ne-p\"><span class=\"ne-text\">在总结出上面那句精炼描述之前，我曾经想出过这样一个具体例子来描述 moc 的必要性：假设某人要为下个月的某会议做安排，在确定每个参会嘉宾座位顺序的时候，难道要提前一个月把每个嘉宾叫到现场来一趟进行真人模拟排列吗？当然是没这个必要，只需要弄一张代表现场座位的表格，然后把每个嘉宾的名字填进表格就可以了，等下个月嘉宾真人到来的时候只需要按照表格对号入座即可。</span><strong><span class=\"ne-text\">这个例子可以用「没有什么是不能通过增加一个抽象层解决的」来理解，那张座位表就是一个抽象层，回到标题，这张表格也可以看做是一种 moc，因为每个姓名都可以看做某个真人的链接，只不过它不能点击罢了</span></strong><span class=\"ne-text\">。</span></p><p id=\"u691ce071\" class=\"ne-p\"><br></p><p id=\"u66c6d772\" class=\"ne-p\"><span class=\"ne-text\">在上面的例子中，如果每个嘉宾既没有名字、也没有别的任何指代符号，就没法安排座位，所以「管理本体不如管理链接」这句话的前提是本体必须要具备可用的链接。这句话如果放在 evernote 的时代属于一句废话，但现在有必要细分讨论链接类型，特别是本地软件的 url scheme，它的作用极大。</span></p><h2 id=\"eeb426a0\"><span class=\"ne-text\">内部链接</span></h2><p id=\"u5471b015\" class=\"ne-p\"><span class=\"ne-text\">在双向链接时代之前，具备内部链接的笔记类软件不多，现在新诞生的软件基本上全都有内部链接了，而且可以很方便地用 </span><code class=\"ne-code\"><span class=\"ne-text\">[[</span></code><span class=\"ne-text\"> 符号触发内容搜索并在原地插入</span><code class=\"ne-code\"><span class=\"ne-text\">[[链接]]</span></code><span class=\"ne-text\">，Obsidian 中的 moc 就是这么做的：</span></p><p id=\"u5cc7c74d\" class=\"ne-p\"><br></p><p id=\"u0f888b6c\" class=\"ne-p\" style=\"text-align: center\"><img src=\"https://b3logfile.com/siyuan/1605629299270/assets/1__2jKjcURnsgnTmDCZWspuA-20210618205130-hho81jc.png\" width=\"433\" id=\"Qh50W\" class=\"ne-image\"></p><p id=\"ue5b55327\" class=\"ne-p\"><br></p><p id=\"uab012164\" class=\"ne-p\"><span class=\"ne-text\">没用过 Obsidian 这款软件的人在看到上面这种图的时候很可能认为这是某个网站的截图，毕竟很多老式 wiki 就长这样。大多数 wiki 系统都缺少一个树状侧边栏，而且越是巨型的 wiki 站点就越不适合做侧栏文档树这种功能，把某个词条做成链接索引页是必然的做法，所以我说 nick milo 的探索还处于初级阶段。不过初级归初级，这种文档里的无序列表 moc 还是很实用的，每个文件的本体可以待在自己该在的位置，然后以链接的形式出现在多个专题 moc 文件中。roam research 等大纲双链笔记也很适合做面向主题（话题，问题，项目）的 moc ，但 moc 在这些社区并不火，主要原因可能是 nick milo 跑去玩 Obsidian 了，而且 roam research 的基础设施也不完善，它的左侧栏 star 比 roam edit、logseq 等国产双链笔记的侧栏简陋多了。</span></p><p id=\"ua4d09038\" class=\"ne-p\"><br></p><p id=\"u01aeb2b9\" class=\"ne-p\"><span class=\"ne-text\">管理链接的前提是要有链接，而内部链接作为 moc 的基础设施，在双链时代已经做得比较完善了。</span></p><h2 id=\"0a7dfbfe\"><span class=\"ne-text\">Url Scheme</span></h2><p id=\"ue65d090f\" class=\"ne-p\"><span class=\"ne-text\">但是内部链接有一个很大的局限性——无论是 </span><code class=\"ne-code\"><span class=\"ne-text\">[[笔记标题]]</span></code><span class=\"ne-text\"> 这种文档级链接还是 </span><code class=\"ne-code\"><span class=\"ne-text\">((内部id))</span></code><span class=\"ne-text\"> 这种块级链接，内部链接只能在软件内部使用。为了用某些强大的外部软件来管理链接，笔记软件必须要有对外部提供链接的能力，也就是本地的 url scheme。</span></p><p id=\"u47dc65b6\" class=\"ne-p\"><br></p><p id=\"ub7d61233\" class=\"ne-p\"><span class=\"ne-text\">url scheme 是形如 </span><code class=\"ne-code\"><span class=\"ne-text\">zotero://select/library/items/6VABK9AX</span></code><span class=\"ne-text\">、</span><code class=\"ne-code\"><span class=\"ne-text\">siyuan://blocks/20210615230106-qnpq0ma</span></code><span class=\"ne-text\"> 的本地链接，在外部点击这个链接，就可以唤起对应的本地软件，并直接跳转到对应的文档、段落或条目。</span></p><p id=\"u6044023a\" class=\"ne-p\"><br></p><p id=\"u3ad2d972\" class=\"ne-p\"><span class=\"ne-text\">前几天发过</span><a href=\"https://www.yuque.com/deerain/gannbs/gmkp9w\" data-href=\"https://www.yuque.com/deerain/gannbs/gmkp9w\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">一篇汇总（建议点开瞟一眼）</span></a><span class=\"ne-text\">，总结了一下哪些跟 PKM 相关的桌面软件具备 url scheme、各个工具如何通过 url scheme 联动使用、以及如何让所有 web app 都能插入外部的 url scheme（这个问题的开源解决方案由 web clipper 插件的开发者 </span><span id=\"GAxVw\" class=\"ne-mention\"><a href=\"https://www.yuque.com/yuanfandi\">@DiamondYuan(yuanfandi)</a></span><span class=\"ne-text\"> 友情提供，1.2 版本之后的思源用户只需要把</span><a href=\"https://github.com/diamondyuan/302\" data-href=\"https://github.com/diamondyuan/302\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">这个仓库</span></a><span class=\"ne-text\">直接放进工作空间的 </span><code class=\"ne-code\"><span class=\"ne-text\">widget/</span></code><span class=\"ne-text\"> 目录就能直接通过挂件伺服使用了，其它软件的用户也可以自己通过别的方式部署这个页面）。现在对我来说，url scheme 甚至比内部链接更重要，具体用法会在后面详细介绍。</span></p><h2 id=\"bcda98b6\"><span class=\"ne-text\">网络链接</span></h2><p id=\"ub243fd34\" class=\"ne-p\"><span class=\"ne-text\">url scheme 能给外部提供链接，但是很多本地 PKM 相关软件都懒得添加 url scheme 支持，而 web app 就不一样了，大多数 web app 都能给外部提供某篇文档的链接。不过 web 也有 web 的问题，比如打开一个网页的速度肯定比点击 url scheme 跳转进本地软件慢得多、弱网条件下 web app 没法用、很多在线服务有跑路风险。所以能用本地 url scheme 来构建 moc 当然是最好，web 只是多一种选择。</span></p><h1 id=\"b4e2c2fa\"><span class=\"ne-text\">外部表格 MOC ⭐</span></h1><p id=\"ud9983639\" class=\"ne-p\"><span class=\"ne-text\">前面已经提到，表格是一种很好的链接管理手段，但是真正要用到一张表来管理链接的时候，大多数笔记软件自带的表格是完全不够用的，notion 的 database 在表格方面还行，但仍有局限性，而且我不愿意为了一小碟醋特地包一顿饺子，所以费了很大功夫迁移出来，现在随着国内软件生态的发展，我感觉自己的选择是对的。</span></p><p id=\"u15b22898\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"uc4fa20f3\" class=\"ne-p\"><span class=\"ne-text\">既然自带的表格不行，就要考虑借助外部表格来管理笔记软件提供出去的 url scheme，这个时候大致有这三类选择：</span></p><p id=\"u7256e9e3\" class=\"ne-p\"><br></p><p id=\"ueb9d3074\" class=\"ne-p\"><span class=\"ne-text\">第一类选择是插入 Excel 附件。Excel 的功能就没必要讲废话介绍了，我主要想顺便说一下插入附件这件事究竟代表什么。在笔记里插入附件并不仅仅意味着正文里多了一个指向某文件的链接，</span><strong><span class=\"ne-text\">一条笔记和与它同名的唯一附件其实可以看做同一个个体</span></strong><span class=\"ne-text\">，这件事在 theBrain、remnote 和 Zotero 上早有体现：</span></p><p id=\"u21be22d3\" class=\"ne-p\"><br></p><p id=\"ufb35feff\" class=\"ne-p\" style=\"text-align: center\"><img src=\"https://b3logfile.com/siyuan/1605629299270/assets/image-20210618213037-zwri574.png\" width=\"1403\" id=\"vlOOJ\" class=\"ne-image\"></p><p id=\"ued93683d\" class=\"ne-p\"><br></p><p id=\"u05b99f0b\" class=\"ne-p\"><span class=\"ne-text\">对一条笔记来说，正文是它的属性、标签是它属性、附件也可以看做它的属性，所以在任何一个搜索功能做得不那么差的笔记软件里并不存在这个附件入口深的问题。</span></p><p id=\"u882e1325\" class=\"ne-p\"><br></p><p id=\"ua92c8f4a\" class=\"ne-p\"><span class=\"ne-text\">插入附件的方式有个小缺点是无法直接预览，需要点开查看文件，但以后在思源笔记里估计可以靠三方的 </span><a href=\"https://github.com/siyuan-note/siyuan/issues/1488\" data-href=\"https://github.com/siyuan-note/siyuan/issues/1488\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">widget block</span></a><span class=\"ne-text\"> 来预览 Excel 附件。</span></p><p id=\"u38376dfc\" class=\"ne-p\"><br></p><p id=\"u6a829ebe\" class=\"ne-p\"><span class=\"ne-text\">第二类选择是用 iframe 嵌入各种 Excel 类型的在线文档，比起插入本地 Excel 附件，最大的优点是可以直接预览，大部分时候功能上也可以到满足，这些 Excel 文档将来要本地备份也没有什么障碍，主要缺点就是 iframe 有点费性能而且依赖网络。</span></p><p id=\"u16f9168b\" class=\"ne-p\"><br></p><p id=\"u15d3072f\" class=\"ne-p\"><span class=\"ne-text\">第三类选择是用 iframe 嵌入各种 database 类型在线表格，比如做得最早的 Airtable 和国内新出的飞书多维表格。database 类型的在线表格和 Excel 类型的在线表格从功能上说各有千秋，database 类型的表格不适合做某些展示型的表格（比如 SWOT、5W2H），但如果对表格的需求仅仅是「每行一个对象、每列一个字段」的话可能还是 database 类型的表格更方便一点。如果在笔记里嵌入多维表格，并把笔记软件的 url scheme 放到多维表格中进行管理，就算直接原地删除一个多维表格也不会损失任何笔记数据，同时这些表格单独拿出来用都能发挥作用、不受笔记软件的绑定，并且某一条笔记的 url scheme 可以同时放到好几个多维表格中进行管理，这种灵活性比 notion 大多了。</span></p><p id=\"ua1babc75\" class=\"ne-p\"><br></p><p id=\"u8412d520\" class=\"ne-p\"><span class=\"ne-text\">目前思源是唯一能稳定提供细粒度 url scheme 的纯本地双链笔记，所以别的软件的表现我就不测试了，总之以前我用来做表格型 moc 的外部表格主要是本地的 WPS 表格文件，因为在实操的时候，我发现语雀之外的在线 Excel 文档根本无法正常地通过 iframe 嵌入到思源中，只有语雀的嵌入比较稳定，但是语雀的编辑器又不允许插入本地软件的 url scheme 链接，所以还是用了本地表格。直到飞书多维表格出来以后我才开始全面尝试用 database 类型的在线表格来做表格型 moc，结果飞书多维表格和 Seatable 都无法正常嵌入思源，只有 Airtable 可以正常嵌入，而且 Airtable 有一个很大的优点是它不需要做中转页面就可以直接插入 Zotero 和思源的 url scheme 并正常跳转。虽然 Airtable 用在这个场景下有点大材小用，但它真的很适合做这种 moc，我暂时没有必要把 WPS 表格转到 Airtable，先临时做个 demo 展示一下联用界面：</span></p><p id=\"u84030972\" class=\"ne-p\"><br></p><p id=\"ua8f17bb8\" class=\"ne-p\" style=\"text-align: center\"><img src=\"https://cdn.nlark.com/yuque/0/2021/png/995602/1624202959773-a6d6eca3-1a3d-4157-b169-e53cff567550.png\" width=\"960\" id=\"ufbccf3a1\" class=\"ne-image\"></p><p id=\"u0bbb7151\" class=\"ne-p\" style=\"text-align: center\"><img src=\"https://cdn.nlark.com/yuque/0/2021/png/995602/1624203577213-0e8f919f-490d-464f-a627-e9e2d402166e.png\" width=\"960\" id=\"u1686b2a5\" class=\"ne-image\"></p><p id=\"u90a86944\" class=\"ne-p\"><span class=\"ne-text\">Obsidian 虽然也是一款具备 url scheme 的纯本地双链笔记，但是它的 url scheme 基于字符匹配而非基于内部唯一 id，一旦有重命名或者编辑，提供给外部软件的链接就会失效，所以不是很适合直接照搬思源的这套玩法。其它纯本地且具备 url scheme 的笔记软件总共也没几个，我也懒得去挨个测试嵌入效果了。</span></p><h1 id=\"afe8cf35\"><span class=\"ne-text\">外部图形 MOC ⭐</span></h1><h2 id=\"c29e12e5\"><span class=\"ne-text\">虚假的图谱与真正的图谱</span></h2><p id=\"u1fd60f0d\" class=\"ne-p\"><span class=\"ne-text\">moc 等于管理链接，链接只是填充 moc 的元素，moc 本身也有形态，比如列表、表格，这些形态体现了使用者心目中对这个抽象层的设计。而抽象的最高境界无疑是图形，图形最能形象直观地反映实体之间的</span><strong><span class=\"ne-text\">关系</span></strong><span class=\"ne-text\">、实体</span><strong><span class=\"ne-text\">在问题背景中的地位</span></strong><span class=\"ne-text\">、并且图形和颜色最能刺激人类的大脑，所以做 moc 当然不能缺了图形。</span></p><p id=\"u5662b568\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"uad54cb68\" class=\"ne-p\"><span class=\"ne-text\">在双链时代，所有笔记软件都开始用一个根据 </span><code class=\"ne-code\"><span class=\"ne-text\">[[链接]]</span></code><span class=\"ne-text\"> 自动生成的网状节点连线图来反映节点之间的关系，点击图上的节点可以跳转到对应的笔记，所以它当然也是一种广义的 moc。这股风气持续的时间也不短了，我想对 PKM 稍微有点心得的人差不多都已经意识到双链笔记里</span><strong><span class=\"ne-text\">这种自动生成的关系图毫无作用</span></strong><span class=\"ne-text\">了。</span></p><p id=\"u48a74c27\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u1c94f8d4\" class=\"ne-p\"><span class=\"ne-text\">为什么呢？这要先从我们对 MOC 最根本的使用期望讲起，也就是「面向主题」。</span></p><p id=\"u6c05f166\" class=\"ne-p\"><br></p><p id=\"u152965b0\" class=\"ne-p\"><span class=\"ne-text\">爱因斯坦有这么一句话：</span></p><p id=\"uf9ab8163\" class=\"ne-p\"><br></p><div class=\"ne-quote\"><p id=\"u72b01498\" class=\"ne-p\"><span class=\"ne-text\">我们观察一种情形所用的理论，决定了我们能观察到的东西 </span></p></div><p id=\"ue04026d2\" class=\"ne-p\" style=\"text-align: center\"><img src=\"https://cdn.nlark.com/yuque/0/2021/png/995602/1626618485247-3cd4e5f4-a921-4407-9ec8-1972ace6d0bd.png\" width=\"233\" id=\"ued5da7e7\" class=\"ne-image\"></p><p id=\"u02c56f48\" class=\"ne-p\"><span class=\"ne-text\">这句话对于理解 moc 非常重要。前面已经提到过，在管理笔记的时候，moc 的一大优点就是某条笔记的链接可以同时出现在多个 moc 里，每个 moc 代表了一个专题。其实人们很早就开始使用标签来做同样的事情，某条笔记跟三个专题都有关，那就给它加上这三个标签，</span><strong><span class=\"ne-text\">但 moc 比标签更加优越，因为每个 moc 不仅仅是把某几条内容聚合在一起，还可以在 moc 内部用丰富的结构来反映这几条内容的关系，以及它们对主题的影响</span></strong><span class=\"ne-text\">。</span></p><p id=\"u22870fdc\" class=\"ne-p\"><br></p><p id=\"ueb7a0654\" class=\"ne-p\"><span class=\"ne-text\">举个例子，《海盗精确》这本书，我既可以把它的链接放入名叫「阅读清单」的表格型 moc 里跟其它书籍一起进行管理，也可以同时把它的链接放到名叫「桥牌叫牌方法」的文档型 moc 中与其它叫牌法（不一定对应某一本书，也可能仅对应某一个人物）进行对比并用自然语言写下自己的心得。</span></p><p id=\"uded924a1\" class=\"ne-p\"><br></p><p id=\"uefea3993\" class=\"ne-p\"><span class=\"ne-text\">这就是</span><strong><span class=\"ne-text\">「面向主题」</span></strong><span class=\"ne-text\">的思想，我的整个笔记库里有很多笔记，但是需要出现在「阅读清单」里的笔记只有一部分，而需要出现在「桥牌叫牌方法」里的笔记也只有那么几条。把所有笔记和日记都放到名叫「阅读清单」的表格里显然是不合适的，所以这个筛选的过程很重要。</span><strong><span class=\"ne-text\">某几条内容筛选出来之后，可以用列表呈现、可以用表格呈现、也可以用一个关系图来呈现，但大前提是必须要筛选、并制作一个独立的 moc，而现在双链笔记的图谱都欠缺这种面向主题的筛选，还停留在「面向结构」的低层次上，相当于一条腿走路。</span></strong></p><p id=\"u1ee21aba\" class=\"ne-p\"><br></p><p id=\"uc31b979b\" class=\"ne-p\"><span class=\"ne-text\">图形化的 moc 如果要解决缺少筛选这个核心问题，大致有三类方案。</span></p><p id=\"u4fa4ec29\" class=\"ne-p\"><br></p><p id=\"u8d71631f\" class=\"ne-p\"><span class=\"ne-text\">第一类方案是画饼型软件最爱提的 NLP。首先，我们不可能苦苦等它做到成熟，其次，</span><strong><span class=\"ne-text\">为解决某一个问题选择素材的过程其实也是我们自己学习的过程，筛选并不是什么机械劳动</span></strong><span class=\"ne-text\">，所以就算 AI 真的成熟到可以帮人完成智能筛选了也不该使用它，AI 帮我筛选完了那我自己解决问题的能力还怎么提升？这个东西最大的问题根本不是技术不够成熟，它的初衷就是错的。</span></p><p id=\"u00be22f4\" class=\"ne-p\"><br></p><p id=\"u459ef252\" class=\"ne-p\"><span class=\"ne-text\">第二类方案就是靠元信息来筛选，也就是靠关键词、标签和属性来筛选。用这种方式来做做粗筛也不错，但还是有两个致命问题，第一，元信息的日常维护实在是太费劲了，正经 GTD 软件其实也要靠元信息做筛选，但笔记的数量比任务的数量多太多，元信息根本维护不动，反正我这种强迫症是维护不动。其次，基于元信息的筛选结果无法固化保存下来并反映到图谱上，至少现在的双链笔记连这件小事都无法做到。</span></p><p id=\"ue1317b96\" class=\"ne-p\"><br></p><p id=\"u3606b93a\" class=\"ne-p\"><span class=\"ne-text\">第三类方案很简单，就是手动选择。tiddlymap 早就做出了完美的示范，</span><a href=\"https://www.yuque.com/deerain/gannbs/ng66g6\" data-href=\"https://www.yuque.com/deerain/gannbs/ng66g6\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">很多不同领域的软件也都有手动的图形化抽象层</span></a><span class=\"ne-text\">，可惜双链笔记们不肯学。想把针对每一个专题的筛选结果固化下来，只要建立多个图形化 moc 就行了，双链笔记做不到就靠外部图形软件 + url scheme，我想这是现阶段的最优解。</span></p><p id=\"u1cbb790e\" class=\"ne-p\"><br></p><p id=\"u10ec5c6a\" class=\"ne-p\"><span class=\"ne-text\">筛选先说到这里，后面会放一个具体的图例，现在先来说说目前双链笔记图谱存在的其它问题。双链笔记的图谱之所以没做成手动筛选，其实也是因为「手动筛选」「手动排布」跟「自动生成」有冲突，自动生成的图谱在元素排布上不可能固定，因为笔记里一旦添加了新的</span><code class=\"ne-code\"><span class=\"ne-text\">[[链接]]</span></code><span class=\"ne-text\">，图谱就要重绘，所有元素的位置保持不住，顶多是尽量做到相对固定，但大部分双链笔记的图谱都是满屏幕乱动。</span><strong><span class=\"ne-text\">图形元素的位置是可以有含义的，并且固定的图形位置也可以极大促进记忆</span></strong><span class=\"ne-text\">，现在用户仅仅是新添加一条链接就能让整个图谱的排布变得六亲不认，这种图谱没有认真看的必要。</span></p><p id=\"u67c364d5\" class=\"ne-p\"><br></p><p id=\"u18b708f1\" class=\"ne-p\"><span class=\"ne-text\">除了缺乏筛选、位置不固定，双链笔记关系图的最后一个问题是过于单调。一堆圆点加一堆无标注的连线，顶多再加个 3D 效果，这种图形元素太单调了。既然要做图形化的抽象层，图形元素就应该更加丰富才对，更丰富的图形才可以承载更丰富的信息。theBrain 其实也有图形单调的问题，但它起码做到了给连线添加标注，并且连线要区分方位，可以承载更多的信息。</span></p><p id=\"u6811cb3a\" class=\"ne-p\"><br></p><p id=\"u8248dfd1\" class=\"ne-p\"><span class=\"ne-text\">接下来放一个具体的例子，我之前在语雀上看到有人发布</span><a href=\"https://www.yuque.com/molychin/wsnqvs/eo9s8a\" data-href=\"https://www.yuque.com/molychin/wsnqvs/eo9s8a\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">自制志野烧</span></a><span class=\"ne-text\">，很感兴趣，于是去了解了一下陶器领域，并使用图形化 moc 来辅助研究，下面这张图是其中一张国内古代陶器的部分：</span></p><p id=\"u77019c3d\" class=\"ne-p\"><br></p><div id=\"A0N5P\" class=\"ne-localdoc\"><a href=\"https://www.yuque.com/attachments/yuque/0/2021/pdf/995602/1624182005402-4102d6f3-1e32-46da-9d4c-119cb09ad255.pdf\">国内古代陶器.pdf</a></div><p id=\"u45414a36\" class=\"ne-p\"><br></p><p id=\"u339911b8\" class=\"ne-p\"><span class=\"ne-text\">我在这张图上添加了两个外部软件的 url scheme 链接，一个指向思源笔记中的一条长篇笔记，另外一条指向 zotero 中的一篇文献，同时我在样式上做了一些自己认得出来的区分，确保能认出整张图上的链接。这就是一个典型的外部图形化 moc，它完美地做到了</span><span class=\"ne-text\" style=\"color: #F5222D\">手动筛选、位置固定、图形丰富</span><span class=\"ne-text\">，比自动生成的简陋双链笔记图谱不知道高到哪里去了，虽说我也不是陶器方面的专家，但至少在大致研究并亲手制作这些图之后，我对这个专题的印象无比的深刻，不仅对整个主题有一种把控感，而且可以轻易回想起每一个细节内容，用于学习的笔记能达到这种效果可以说是非常成功了。</span></p><p id=\"uacc7c64f\" class=\"ne-p\"><br></p><p id=\"ube5fc962\" class=\"ne-p\"><span class=\"ne-text\">另外，在双链笔记的图谱中，每个小圆点只能对应内部的一条笔记，而</span><strong><span class=\"ne-text\">在外部图形软件中，一个图形化 moc 既可以承载来自笔记软件的笔记链接，也可以承载来自 zotero 的文献链接，还可以靠 everything 的搜索型 url scheme 来添加本地文件，插入网页链接就更加不成问题，这种能直接整合所有资源的图形化 moc 才是真正的能对人起到帮助的</span></strong><span class=\"ne-text\">。双链笔记关系图，鶸。</span></p><p id=\"u0263fab1\" class=\"ne-p\"><br></p><p id=\"u10c847dc\" class=\"ne-p\"><span class=\"ne-text\">直到今天依然有不少双链笔记软件在试图优化那个自动生成的鸡肋关系图，为此，有的开发者换了一个又一个图形库就为了让特效好看点，有的开发者在图形 UI 上加了一个又一个 tweak，甚至有开发者把 How to Take Smart Notes 翻了一遍又一遍，这些全都是无用功，</span><strong><span class=\"ne-text\">只要那个图谱还是自动生成的，它就永远不可能有用</span></strong><span class=\"ne-text\">。但是我也不想傻乎乎地跑去劝说别人，只能写文的时候顺便提一句，届不届得到就随缘吧。名叫关系图的东西当然有用，但是做成这些双链笔记这样那就没用了，theBrain 的图形交互虽然比这些双链笔记的关系图好一些，但它的主体交互模式依然停留在「面向结构」的低层次，并且到了真正想做面向主题的整理的时候，它也提供不了太多帮助。</span></p><p id=\"u8450c316\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u6d38e9b0\" class=\"ne-p\"><span class=\"ne-text\">主题与结构是难以分割的，为某个主题挑选出一些内容之后，基本上还是需要以一定的结构来组织它们，但是这两个步骤谁先谁后很重要。如果先根据主题筛选内容，后期的结构整理就能在核心目标的指引下顺畅进行，也就是典型的先找研究方向再找研究资料；如果没有明确的主题或方向，天天拿着一堆零散内容链接来链接去，有价值的内容组合基本上不会随着链接增多突然自己冒出来——有价值的组合之所以会出现，不是因为做了一堆卡片加了一些链接，而是因为我们积累的知识更多了、</span><strong><span class=\"ne-text\">并且我们心里本来就带着某个问题</span></strong><span class=\"ne-text\">。所以如果一个笔记工具告诉你「因为思维是网状的，所以你要当一个网状结构的维护工」，那就是在把人带进一种低效的思考方式中。</span></p><p id=\"uf37c798a\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u58f0b24d\" class=\"ne-p\"><span class=\"ne-text\">我并不是说没有主题或方向的时候就不该记录一些有价值的零碎内容，这一步也是非常重要的，但天天为了为了网状而网状、为了不分类而不分类、为了原子化而原子化、为了反传统而反传统，最后只能是竹篮打水一场空。如果真的想反传统，不如先把图形化 MOC 玩起来。</span></p><p id=\"u3e196877\" class=\"ne-p\"><br></p><p id=\"ue72cb03d\" class=\"ne-p\"><span class=\"ne-text\">有一些用户至今仍然认为这些双链笔记的关系图是有用的，主要是因为强加了一些与实物不符的美好幻想在上面，而且那几条被复读得最多的支持理由都是很站不住脚的。比如“发现联系”，这就是一种错误的角色期待（role expectations），你盼望有一个笔记工具能帮助你发现笔记之间有价值的潜在联系，这种期待本身是合乎情理的，但是如果你决定让那些自动生成的辣眼睛关系图来挑起这个任务......终究是错付了。为了更清楚地说明这件事，我想出一个特别贴切的例子：</span><strong><span class=\"ne-text\">你打篮球的时候希望找个厉害队友，这种愿望本身是没错的，但是你放着霍华德不找、跑去找霍金，那就大错特错了</span></strong><span class=\"ne-text\">。另外一种很常见的言论是“通过能反映自己知识结构的全局关系图来发现自己的知识集中在哪些方面，以及有哪些比较欠缺的方面”，如果你抱有这种想法，我的建议是点击</span><a href=\"https://en.wikipedia.org/wiki/Special:Random\" data-href=\"https://en.wikipedia.org/wiki/Special:Random\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">这个随机链接</span></a><span class=\"ne-text\">，多点击几次，次数越多越好，然后你就会发现“审视自己的知识结构”这件事有多傲慢了。我印象最深的就这两条，如果有人用其它理由来评论的话我再补充。</span></p><h2 id=\"DD2LD\"><span class=\"ne-text\">思维导图？</span></h2><p id=\"udaf88974\" class=\"ne-p\"><span class=\"ne-text\">思维导图这个词一般特指 Tony Buzan 那种中心发散的思维导图，如果按照这种狭义定义的话，思维导图这种形式本身对我来说已经没有实用性了。</span><strong><span class=\"ne-text\">按照 Buzan 的原话，思维导图最大的价值是通过图形和颜色来刺激想象和联想</span></strong><span class=\"ne-text\">，至于为什么他宣传的思维导图要长成海星状，主要是因为很多人不被施加限制就无所适从、不知道自己该怎么做（这句是我说的😂），关于这点可以去看看《禅与摩托车维修艺术》中那段写作剧情。图像刺激靠 draw.io 和 scapple 就行，它们不拘泥于海星状（实际上就是树状）、而且想做树状结构的时候也可以做。所以拿思维导图做 moc 就免了吧，自己的抽象层还是要自己设计。</span></p><h2 id=\"16df685a\"><span class=\"ne-text\">轻松话题：软件</span></h2><p id=\"u607f269a\" class=\"ne-p\"><span class=\"ne-text\">上面那张国内古代陶器 moc 是用 draw.io 本地桌面版绘制的，选择它的主要原因是它纯本地、完美跨各个桌面平台，而且作为一个开源软件，其质量竟然超过了大多数商业软件。同时，它能够正常插入外部的 url scheme，微软的 visio 好像插入链接的时候反而有点问题，而且 visio 和 omnigraffle 这两个最强大的图形工具都不跨平台，果断弃用。所以要绘制复杂一点的图形，首选 draw.io 就对了。</span></p><p id=\"u6d0c5153\" class=\"ne-p\"><br></p><p id=\"u25845c3e\" class=\"ne-p\"><span class=\"ne-text\">draw.io 需要一定的上手成本来熟悉各种快捷操作，就算熟悉了，在有些时候也不那么方便，比如纸张尺寸设置可能需要在中途更改。所以在绘制比较简单的图形的时候我就用 scapple，scapple 是 scrivener 背后的公司 Literature &amp; Latte 推出的图形草稿软件，它功能齐全、没有画布边界，用起来非常方便，而且也覆盖了 win &amp; mac 两大桌面平台，这篇文章就是用 scapple 来做前期逻辑组织的：</span></p><p id=\"ud1b84ff7\" class=\"ne-p\"><br></p><p id=\"uccf27604\" class=\"ne-p\" style=\"text-align: center\"><img src=\"https://b3logfile.com/siyuan/1605629299270/assets/image-20210619203336-2n71vaf.png\" width=\"517\" id=\"X7r7D\" class=\"ne-image\"></p><p id=\"uf8fdc61c\" class=\"ne-p\"><br></p><p id=\"u207488cb\" class=\"ne-p\"><span class=\"ne-text\">draw.io 和 scapple 的每一张图都保存成一个单独的文件，然后把这个文件以附件形式插入一条笔记中，然后在下面放一张截图，再辅以一些说明文字，这就是一条「 MOC 笔记」，前面已经提到过这种思想。另外，如果使用在线版或者自己部署的 draw.io，是很容易通过 iframe 把自己的绘图嵌入笔记的，数据依然在自己手上。至于怎么管理这些 MOC 笔记，下次介绍「分形卡片」的时候再说。</span></p><p id=\"u7c4ca102\" class=\"ne-p\"><br></p><p id=\"u573ae31a\" class=\"ne-p\"><span class=\"ne-text\">我的主力图形工具就是 scapple 和 draw.io 这两个纯本地跨平台的软件，onenote 也覆盖了 win &amp; mac 两大平台，而且它的表格功能和图形功能都还过得去，但是就算把它加进我的工具链也不会带来什么提升，因为我已经选择了最好用的外部表格工具和外部图形工具，所以 onenote 就完全没必要重拾了。</span></p><h1 id=\"15862a55\"><span class=\"ne-text\">进阶：对 moc 的零碎心得</span></h1><p id=\"u92624387\" class=\"ne-p\"><br></p><div class=\"ne-quote\"><p id=\"udf0e79a5\" class=\"ne-p\"><span class=\"ne-text\">还有哪些 moc ？</span></p></div><p id=\"u22c1ecf6\" class=\"ne-p\"><span class=\"ne-text\">因为 moc 是索引，纸质书籍的目录都可以看成 moc；除了印刷书籍，纸质的子弹笔记和一元笔记的索引页也算 moc，顺便一提子弹笔记是一种注意力管理方法，跟知识管理没多大关系，至少是不太适合。</span></p><p id=\"u6471ce4f\" class=\"ne-p\"><span class=\"ne-text\">因为 moc 可以是链接的集合，所以网站的首页、特别是各种 xxx 网址导航，也是 moc，因为这些页面是链接的集合；很多笔记软件都有 star （给常用笔记加星标）的功能，展示 star 的侧栏也是 moc，logseq 的 contents 页面就是一个 moc，但是它把这个页面直接放进了侧栏常驻，这比一般的 star（或称收藏）更先进；除此之外还有一些特殊的链接形式组成的 moc，比如一个布满程序快捷方式和文件快捷方式的电脑桌面也算 moc。</span></p><p id=\"u37f13642\" class=\"ne-p\"><span class=\"ne-text\">看待 moc 的视角一定要拓宽，moc 是一种抽象层，前文提到的座位安排表格里只写了一些人名、并没有可点击的链接，但它依然算是 moc；同理，名单、纸质黄页和网络黄页都算 moc。</span></p><p id=\"ufcd3d45e\" class=\"ne-p\"><br></p><div class=\"ne-quote\"><p id=\"u4647826a\" class=\"ne-p\"><span class=\"ne-text\">用 moc 来做知识管理有哪些优点？</span></p></div><ul class=\"ne-ul\"><li id=\"ub4df56c1\"><span class=\"ne-text\">不用受制于文件系统，同一个本体能够以链接的形式出现在多个位置，在一个好用的编辑器里调整顺序移动位置也比文件系统的交互更方便</span></li><li id=\"uf2f2e6d5\"><span class=\"ne-text\">管理本体的方式既没有管理链接的方式丰富，也没有管理链接的方式实用，moc 抽象层的形式可以由自己设计，而不是受制于某些商业公司的设计师和产品经理</span></li></ul><ul class=\"ne-ul\"><li id=\"u9cd06f88\"><span class=\"ne-text\">帮助养成「面向主题」的思想，避免被“思维是网状的”这种话忽悠瘸</span></li><li id=\"u1762b612\"><span class=\"ne-text\">促使人主动去构建功能上高度正交的工具链，而不是在一堆功能重合度很大的软件里挑来挑去</span></li></ul><p id=\"u8eb68079\" class=\"ne-p\"><br></p><div class=\"ne-quote\"><p id=\"u8bb355f7\" class=\"ne-p\"><span class=\"ne-text\">用 moc 来做知识管理有哪些局限性？</span></p></div><ul class=\"ne-ul\"><li id=\"u04f4fd8d\"><span class=\"ne-text\">有些内容自带大量特殊元信息，比如音乐、文献，管理它们最好使用专门软件，省力</span></li><li id=\"u9365a76a\"><span class=\"ne-text\">某些笔记软件的编辑器操作性很烂，不适合做内部 moc，反正无序列表的操作手感最差也得达到加了 outliner 插件的 Obsidian 那种程度才行</span></li></ul><ul class=\"ne-ul\"><li id=\"u9b8d3fb5\"><span class=\"ne-text\">有些软件虽然能向外部提供 url scheme，但这个链接并不是稳定的，典型代表就是 Obsidian</span></li></ul><p id=\"u4252c9a6\" class=\"ne-p\"><br></p><div class=\"ne-quote\"><p id=\"u630aea45\" class=\"ne-p\"><span class=\"ne-text\">需要用 moc 来管理全部的笔记吗？</span></p></div><p id=\"uf291404a\" class=\"ne-p\"><span class=\"ne-text\">毫无必要。moc 真正的意义不是分类，而是「面向主题」，只有跟某一个主题关系很大的笔记才有必要加入对应的 moc，不能为主题的所用的笔记只要能被检索到就行，当然这里的检索不只是指搜索，全局搜索、文件树查找、甚至随机笔记功能都算检索。</span></p><p id=\"ua5005083\" class=\"ne-p\"><br></p><div class=\"ne-quote\"><p id=\"u46f35590\" class=\"ne-p\"><span class=\"ne-text\">moc 疏于维护怎么办？</span></p></div><p id=\"ufc47d767\" class=\"ne-p\"><span class=\"ne-text\">如果看懂了上一条，就能明白这一条不属于知识管理的范畴，要解决这个问题，最需要的是一个能快速记录灵感的任务管理工具。</span></p><p id=\"ub84fb22d\" class=\"ne-p\"><br></p><div class=\"ne-quote\"><p id=\"ue1078577\" class=\"ne-p\"><span class=\"ne-text\">图形化的 moc 里一定要连线吗？</span></p></div><p id=\"uf23a7d45\" class=\"ne-p\"><span class=\"ne-text\">没必要，请参考</span><a href=\"https://www.yuque.com/deerain/gannbs/ng66g6#OVo7o\" data-href=\"https://www.yuque.com/deerain/gannbs/ng66g6#OVo7o\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">这里</span></a><span class=\"ne-text\">。</span></p><p id=\"u325a3655\" class=\"ne-p\"><br></p><div class=\"ne-quote\"><p id=\"uf0871bbd\" class=\"ne-p\"><span class=\"ne-text\">做外部 moc 的时候，给每个地方都添加 url scheme 好麻烦？</span></p></div><p id=\"u92cee57a\" class=\"ne-p\"><span class=\"ne-text\">没有必要给所有地方添加链接，比如上面发的阅读清单，只有那些写过读书笔记的书，才需要在后面放一个读书笔记的 url scheme 链接，没写当然不需要加这个链接，写了其实也可以不加。</span></p><p id=\"u966f52e7\" class=\"ne-p\"><span class=\"ne-text\">在图形化的 moc 里，给每个元素都添加链接就更没必要了，</span><strong><span class=\"ne-text\">因为图形往往先于笔记存在，而很多元素根本找不到对应的可链接对象</span></strong><span class=\"ne-text\">。具体可以参考上面的陶器 moc，我插入了大量图片，但我只给兵马俑那张图片添加了一个指向 Zotero 中文献的链接，别的图片根本没有强行添加链接的必要。</span></p><p id=\"u33bb3834\" class=\"ne-p\"><span class=\"ne-text\">再进一步说，假如我的主力笔记工具是 Zettlr，它根本就不具备能提供给外部软件的 url scheme，我靠外部图形软件来做 moc 整合 Zettlr 中的内容还合适吗？</span></p><p id=\"u2527773a\" class=\"ne-p\" style=\"text-align: center\"><img src=\"https://cdn.nlark.com/yuque/0/2021/png/995602/1624113429307-eb03ab60-1243-442a-9fec-f8bfce0ae1da.png\" width=\"163\" id=\"u03fbe998\" class=\"ne-image\"></p><p id=\"ub934a035\" class=\"ne-p\"><strong><span class=\"ne-text\">抽象层的设计方式比是否具有可点击的链接更重要</span></strong><span class=\"ne-text\">，有超链接当然最好，但是如果实在没有也不是不行，思维一定要开放，既不要被工具牵着鼻子走，也不要局限于别人分享的心得（比如本文）。</span></p><p id=\"u38e8a643\" class=\"ne-p\"><span class=\"ne-text\"></span></p><div class=\"ne-quote\"><p id=\"u08f17803\" class=\"ne-p\"><span class=\"ne-text\">笔记软件内部的[[链接]]用起来挺方便，但是我觉得制作外部 moc 很麻烦？</span></p></div><p id=\"u08dbde0d\" class=\"ne-p\"><strong><span class=\"ne-text\">管理现成文件不是 moc 的真正目的</span></strong><span class=\"ne-text\">，制作 moc 是为了应对某个具体的问题。比如我拿 draw.io 为某个项目绘制一幅流程图，这是一个</span><strong><span class=\"ne-text\">必要</span></strong><span class=\"ne-text\">且</span><strong><span class=\"ne-text\">独立</span></strong><span class=\"ne-text\">的任务，无论有没有 moc 这种观念、无论我有没有别的笔记软件，这流程图我都得画，而且这幅流程图画出来就能独立发挥作用，所以这个时候来评价画流程图这个行为麻烦不麻烦是没有意义的。将来我有可能要给这个流程图上的某些元素添加超链接，这是第二步了，第二步麻不麻烦主要取决于使用者的强迫症严不严重，上一条已经详细说过这个问题了。</span></p></div>",
  "slug": 47438740,
  "title": "MOC - 管理链接而非本体"
}