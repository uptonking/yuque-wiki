{
  "body_html": "<!doctype html><div class=\"lake-content\" typography=\"classic\"><div data-type=\"info\" class=\"ne-alert\"><p id=\"u4ecebb38\" class=\"ne-p\"><span class=\"ne-text\">（内容严重落后，缺少了最关键的信息，待更新）</span></p><p id=\"u5f673c7d\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"61a4d00e46997338139947b063e5c665\" class=\"ne-p\"><span class=\"ne-text\">说明：这篇文档只是我安利思源笔记文章的一小部分（但是光这一小部分也有五千多字了），下面几个小节在最终文章里不一定还是按照这样的顺序排列，甚至有可能不会聚在同一个地方。因为这部分属于针对舆论环境的铺垫性内容，可能有争议，所以先挂出来看看别人会怎么反驳我。</span></p></div><p id=\"95ae29f876cdb9d21eb1b4325027e83f\" class=\"ne-p\"><br></p><p id=\"c72c7ce2de47fd3705ebba14a29ee2e9\" class=\"ne-p\"><span class=\"ne-text\">（接上一段：比较简单的基本介绍）</span></p><p id=\"a6cb039bd13878276df6b040574f3014\" class=\"ne-p\"><br></p><h1 id=\"51bff7a8\" style=\"text-align: left\"><span class=\"ne-text\">文档的粒度</span></h1><p id=\"dfe3d6430824ae9aaf6dd54065e7b9d8\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\">最近，我也看到了一个奇怪的现象。一方面，使用 kramdown 的思源笔记已经把粒度做得很细了，而且还有丰富的块类型、块属性和块级操作。奇怪的是，另一方面，主流舆论声音还是认为思源笔记这种文档型双链软件在细粒度上做得不够好。</span></p><p id=\"c025a744fb77e73cda07706e5bfda28c\" class=\"ne-p\"><br></p><p id=\"08f34474d9442b969d26ea30123e3c69\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\">出现这种情况，当然有很大一部分原因是许多用户没有试用过思源笔记，或是只试用过早期的思源笔记，导致对它有错误或过时的印象。但是更主要的原因恐怕还是 roam research 等大纲型双链软件率先把持了粒度的定义权，所以人们当然会觉得细粒度只能靠圆点式大纲编辑器来实现。可文档的粒度不够细，不是文档这种形式的问题，而是纯文本的问题，说得难听一点，可能不是开发者的问题，而是用户的问题。实际上正常页面里的一行字、一张图片、一条数学公式、无序列表里的某一项都可以是细粒度操作的对象，notion 早就做到了这一点，这个粒度已经细到没法再细了。</span></p><p id=\"ec91056fbf1a631bc987cfd56630a0fa\" class=\"ne-p\"><br></p><p id=\"daebd679aa4abe104b39ecde7e0d1972\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\">但是纯文本不一样，在双向链接热潮之前，国外 emacs 社区早就有关于 org-mode 的细粒度讨论，用 heading 名称来定位会遇到重名的问题，但是一说要加 id 来定位，所有人都连连 say no。就我所见，最早往纯文本里加 id 的笔记软件是 zettlr，zettlr 可以方便地用快捷键在 markdown 文件里插入一个时间戳，作者 Hendrik 自己说得很清楚，他引入这个 id 的主要意图是防止文件重命名导致[[链接]]失效，所以多数时候一个文件里只有一个 id，即便如此，我当时还是觉得 Hendrik 这种做法很糟糕，后来出现的 Obsidian 并不需要在正文里插入 id 就能完美地解决文件重命名的问题，更强化了我这种想法。</span></p><p id=\"dfecc0790cbb02171eb09906cdfb433f\" class=\"ne-p\"><br></p><p id=\"7a4b54f25712cf2b964b06f88acc47d8\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\">双向链接这个概念火起来之后，人们对最早跟进的 Obsidian 最大的执念就是没有所谓的「块引用」，往纯文本文件里加 id 来对某个元素进行定位的大致方向很多人都能想到，但是除了 zettlr 谁都不愿意做这种事，因为加入 id 会破坏标记语言源码的可读性，所以配套使用的编辑器最好是过滤掉 id 的所见即所得编辑器。想加 id 先得做个复杂的编辑器，这实在是太劝退了。除了要解决所见即所得编辑器的问题，需要解决的问题还有一大堆，比如在用户的整个使用周期中要考虑怎么让 id 持久化，批量导出为无 id 格式的功能也必须要有。总结一下就是，我对纯文本的未来持悲观态度，觉得不会有任何笔记类产品有动力去解决这些问题，直到思源笔记和 logseq 出现。</span></p><p id=\"45c55e7f634ff6428945b59cc9054485\" class=\"ne-p\"><br></p><p id=\"70e935bfa052e05fe6c8eecb8e80ee96\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\">本文只说思源笔记，思源笔记的开发者以前正好做过所见即所得的 markdown 编辑器，第一个大问题算是解决了。接下来为了实现块引用就需要在正文中引入 id，我想做这种决定心里不可能没有困惑，也没法保证用户们会买账，但最终的结果是思源笔记成功诞生了，有兴趣了解更多的技术细节可以看开发者自己写的这篇《</span><a href=\"https://ld246.com/article/1597226949061\" data-href=\"https://ld246.com/article/1597226949061\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">Markdown 实现块级引用双向链接的探索</span></a><span class=\"ne-text\">》。所以我在最早的版本第一次试用思源笔记的时候就不禁大呼牛逼，不是因为那个时候它做得多完善，而是因为我第一次看到这么敢冒天下之大不韪的纯文本笔记软件。</span></p><p id=\"e5b55e9560f8e3545ffb822a7a2569b1\" class=\"ne-p\"><br></p><p id=\"b2c2385f54454155df40b366e9176961\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\">迭代到今天，块引用对思源笔记来说甚至连主要卖点都算不上，因为思源笔记已经大大扩展了「块」的含义，实现了一切皆为块的统一架构（当然，跟 notion 没有什么联系，后面会写到），很多功能的实现都得益于这套架构。在大纲型双链软件中，也没有谁能做到这么统一自然，其中做得最好的 remnote 统一倒是很统一，但是很不直观，即使是比较经验的中级用户也要费点时间去理解它的整体设计架构，而思源只要看一眼就能明白。再说回细粒度，现在思源的编辑器里所有的块级元素都能进行统一的操作，引用、移动、折叠展开、设置别名、添加书签、设置颜色。比起大纲型的软件，思源笔记还有明确的块类型，可以指定类型筛选。无论是文档还是大纲，无论是纯文本还是数据库，一个笔记软件已经做到这个程度还要说它在细粒度上做得不好就是纯扯淡了。</span></p><p id=\"1063f8fbf90571c84373294e7a5f3b24\" class=\"ne-p\"><br></p><p id=\"26b629433b1d0a39621e9895b3a3d1cc\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\">不过即便别人有误会，已经做出来的功能毕竟是无法抹消的，所以比起「思源笔记没做好细粒度」的错误印象，更危险的恐怕是「markdown 必须简洁、markdown 不配加入更多特性」的观念。说到底，如果一个基于 markdown 文件的「笔记」软件不完全兼容 GFM 就是「坏」的，那 OneNote 这种富文本软件是不是该直接自裁谢罪了？</span></p><p id=\"70fb4b27ca98c19519341ec8dae254ae\" class=\"ne-p\"><br></p><h1 id=\"cb360880\" style=\"text-align: left\"><span class=\"ne-text\">文档与大纲，形式与软件</span></h1><p id=\"796a952f2757a75f8d8c965862acd106\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\">文档与大纲是当前笔记软件编辑器的两种主要形式，我们先不谈这二者孰优孰劣，先来看看「包含关系」。</span></p><p id=\"be002690157ad3f58c8a1ad66e0aada5\" class=\"ne-p\"><br></p><p id=\"78dd59e67a9435046d6cc6c1b5ba2e2a\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\">在圆点式大纲编辑器里，一个 bullet 也可能写满了一大段话，从这种角度来说，大纲在「形式」上好像包含了文档，但并不能因此说大纲型软件包含了文档型软件。思源笔记有很多容器块，最典型的容器块就是标题块，使用标题块完全可以在文档内构建起高度可用的树状结构，org-mode 的基本用法也是这样的，哪个圆点型大纲编辑器敢说自己包含了 org-mode？</span></p><p id=\"5661dd43a86578303c06936c6efc8307\" class=\"ne-p\"><br></p><p id=\"9fa629b8abf5a230f905b90a75a5615b\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\">所以「形式」和具体的某个「软件」并不是一一对应的关系，在思源里，对标 roam research 这类大纲型双链软件的 page 的是一个个 markdown 文件（而且思想不那么二极管的用户可以对这些文件分类），如果在每个 markdown 文件里只用列表，那么思源的操作粒度同样细到每个 bullet、同样可以拖动、同样可以聚焦，那两者的形式又有什么本质区别呢？当然，操作手感上可能有点差距，但这不是什么不可改变的东西，只要有足够的时间精力，思源的列表操作手感也可以做得很好，追上 workflowy 有点悬，但追平 roam research 之流还是不难的。</span></p><p id=\"83b9b39e1c90e3616bf02fe7cdbd7e15\" class=\"ne-p\"><br></p><p id=\"def87ec2b41a28308400b1d36a5eebb5\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\">如果文档编辑器把列表的操作优化得足够好了，大纲编辑器就是文档编辑器的真子集，因为文档编辑器也可以不用列表。</span></p><p id=\"b8a4bed2b23118718d5579513d08698e\" class=\"ne-p\"><br></p><p id=\"761dae2eaa8334a9cd97a22102e6d5a8\" class=\"ne-p\" style=\"text-align: left\"><strong><span class=\"ne-text\">所以我的总结是，形式上，大纲囊括文档，软件上，文档囊括大纲。</span></strong></p><p id=\"5611829a40665a2b94cb6f6e01ff0f1c\" class=\"ne-p\"><br></p><p id=\"f5201d67566029841367432941184b40\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\">可是思源笔记的列表操作手感目前并没有优化得像 workflowy 一样极度顺滑，连 roam research 都比不过，这是否意味着现阶段更应该选择 roam research 之类的大纲型双链笔记？</span></p><p id=\"456f9143d3458f34acca53911bb090fd\" class=\"ne-p\"><br></p><p id=\"b8aa8dda092eeaaa686da5bea48b47c7\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\">当然不是。</span></p><p id=\"f5e1f91c1b768be0713a3a7fc5d04fc6\" class=\"ne-p\"><br></p><h1 id=\"7df2dcd5\" style=\"text-align: left\"><span class=\"ne-text\">文档型编辑器的优势——呈现形式</span></h1><p id=\"6881eb0f871bf5b3059ee555f72f07f5\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\">上面的分析已经做出了一个思维示范，看问题不要只看一个方面。一个软件的特质是从很多方面来体现的，编辑器仅仅是其中一个方面，</span><strong><span class=\"ne-text\">哪怕仅仅比较编辑器区域，也不能光看逻辑形式</span></strong><span class=\"ne-text\">。</span></p><p id=\"01d44c6f39f806e8a9b66de13cc0a2c5\" class=\"ne-p\"><br></p><p id=\"57c55eb568fd81089ccbfceee3253e84\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\">人类并不是活在形而上的世界里，理论上讲，一个人幻想自己在跟梦中情人翻云覆雨也能让脑内分泌点多巴胺，但这种分泌量绝对比不上真刀真枪现场实战。</span><strong><span class=\"ne-text\">具体到编辑器上，逻辑形式不代表一切，视觉刺激效果绝对不能忽略</span></strong><span class=\"ne-text\">。</span></p><p id=\"d98cc4f5b4535a557b47ac267d9bd502\" class=\"ne-p\"><br></p><p id=\"945cfd1d1fd1778657f418a3c4f8950d\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\">有不少人接受不了大纲编辑器，觉得每段话或每句话都有个圆点很不好看，不管拆不拆成短句都不好看，图片和公式在这种呈现下就更奇怪了。我想这并不是什么个人喜好的问题，哪怕同样是只放 3 大段话，文档编辑器的阅读体验真的比大纲编辑器更好。</span></p><p id=\"5d0dddbfbc1f1dcac0b5795b8c785bbe\" class=\"ne-p\"><br></p><p id=\"86c991785f0ff326b568953bfc5f29a4\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\">圆点是个小问题，roam edit 里点击菜单转换成 markdown 视图就解决了，但是文档的有些展示效果其实是大纲编辑器很难模仿的，比如短句的居中。大纲编辑器在视觉呈现上靠向右缩进来体现层级关系，如果某一行居中了，它的下属内容必须得跟着往右跑，这样一来跟前面几行就有了严重的视觉割裂。</span></p><p id=\"d99c2eb42caade4ca267b5c269e6e3c6\" class=\"ne-p\"><br></p><p id=\"b4b52306e79f4536e242730775992348\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\">又比如，在需要让某几个内容块聚到一起的时候，思源的容器块也比大纲编辑器好看多了，特别是 markdown 引用块。大纲要么缩进（难看），要么软换行或注释（难用），两种方案都不如文档编辑器。</span></p><p id=\"d523c93338ea9175298cefd93e36b9ff\" class=\"ne-p\"><br></p><p id=\"8c0747a31cb4debd64f5cb0af0dacf68\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\">另外，大纲编辑器的排版形式跟外部资源不是无缝对接的，虽然我自己基本不会把某个网页整个剪藏下来，但还是会不时地从网页或 PDF 文件中复制几个句子或几个段落到笔记里。而在做这种粘贴的时候，大纲编辑器基本上都处理不好折行的问题，需要手动去调，很烦。用 quicker 之类的软件来处理行不行呢？有帮助，但不能从根本上解决，因为当折行变成断行的时候，分段必须靠肉眼区分。</span></p><p id=\"4d2e95e7c7e997beb15179d668bccd28\" class=\"ne-p\"><br></p><p id=\"b63ac96a383a5728dd2ec74899df4a14\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\">觉得前面这些都可以克服？那接下来说点无法克服的。</span></p><p id=\"0b4d3677b7a7d40b13fe0eabb9447a0d\" class=\"ne-p\"><br></p><p id=\"2e494af0d2d81cf06ddea5eed3f9f611\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\">在大纲编辑器里，所有层级全部展开的样子让人提不起阅读欲，必须收起几个层级或聚焦到某个节点上才能看。这一点重度用户应该都有体会，我在 workflowy 里有大量内容，每次细看某部分内容都是一种煎熬。为什么会这样呢？这里就要说一下 7 这个神奇的数字了，成年人类的瞬时记忆广度是 7，无论在视觉上还是听觉上，面对多于 7 个的对象就会麻木，当大纲编辑器全部展开，屏幕上的节点数肯定是远远超过 7 个的，为了让自己觉得舒服，人就会不由自主地去收缩层级或点击某个节点来聚焦。</span></p><p id=\"cf5fcbd8e377649e13c52a71eae4cd29\" class=\"ne-p\"><br></p><p id=\"88415c600b763fbcc8220e4884684ff2\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\">可是文档编辑器不一样，不管内容多少，一个屏幕上的段落数很少超过 7，即使超过也不会超过太多，这就避免了视觉对象太多使人难受的问题。实际上大家可以去看一看各个做得比较成功的内容平台，比如 medium 和知乎，尽管某些快餐式文章每一两句话就要分成一段，可是当你在手机上阅读的时候，无论你怎么上下滚动，手机屏幕上的段落基本都不会超过 7 个，段间距就是用来调控这个的。</span></p><p id=\"bd78b27dd334cbe2f2c2c5ffa776c312\" class=\"ne-p\"><br></p><p id=\"be63ff1f0b973b3c904d6b7756a27e98\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\">可是一个段落太太太长又怎么办呢？段落太长的问题就需要写内容的人自己把控了，这不是软件管得了的，所以写普通文档也是在锻炼自己的文字把控能力。</span></p><p id=\"549bb3cef1c78d9da826b02a3c3f907d\" class=\"ne-p\"><br></p><p id=\"0cb169ca71576759f4f35932891da98f\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\">从我自己的经验来说，一个段落如果不是长得太离谱，没必要拆分短句然后组织成一个没有语言连贯性的多级无序列表。在阅读一整段连贯文字的时候，有较强思维能力的人脑中会浮现出比多级无序列表更为复杂的思想，我有驾驭长句子和长段落的能力，拆成短句没什么好的。当然大纲编辑器也可以做到一屏 7 个节点 7 大段文字，可真要这么用的话何必选大纲编辑器呢？</span></p><p id=\"bf841a5db1654d23e07cfff72cc367eb\" class=\"ne-p\"><br></p><p id=\"578e739affe338635cb922d79e430ecd\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\">并不是所有大纲编辑器都有呈现能力差的问题，org-mode 很重视「正文」，只要把缩进一关根本没这些毛病，只有从 workflowy 开始的圆点式大纲编辑器才这样，但双链笔记软件基本都是这种形式。</span></p><p id=\"193d39884bb7dbb6957923ad91775ef3\" class=\"ne-p\"><br></p><p id=\"b527d7b6253ab37ad9bc52d0f068c23c\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\">说了这么多缺点，是不是意味着文档编辑器一定比大纲编辑器更好呢？也不是。还是那句话，看问题不能只看一个方面，同时，还要认识到当前的问题有可能只是某个更大问题的一个子问题。如果大纲编辑器不具备能弥补上述缺点的优点，我也不会长期重度使用 org-mode 和 workflowy 这些大纲编辑器了，所以话说回来，既然视觉呈现能力差，基于大纲编辑器的软件就应该好好发挥结构调整方便的优势。可惜，roam research 带了个坏头，采用了多页面的设计。</span></p><p id=\"f8cf2387a89b481f6e9d397a6215e6aa\" class=\"ne-p\"><br></p><h1 id=\"a1ba3053\" style=\"text-align: left\"><span class=\"ne-text\">失败的多页面</span></h1><p id=\"d8d8b9d7580707144a23ce61caccb0f9\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\">没错，roam research 的多页面（或称多文档）是一个失败的设计。</span></p><p id=\"303dc7aa4b9a8903ddc2b0c0bb6ac980\" class=\"ne-p\"><br></p><p id=\"ee954b239401277c704a5d306916f522\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\">我记得在 Dynalist 和幕布刚火起来的时候，很多 workflowy 老用户都指出大纲编辑器的多页面是个失败的设计（当然，org-mode 和 omnioutlier 不能算在其中），也给出了种种充分有力的理由。可是 roam research 火起来之后，这种声音突然就消失了。这很奇怪，因为当初 Dynalist 和幕布身上那些因为多页面而产生的槽点，在 roam research 上不仅没得到解决，还变得更糟了。</span></p><p id=\"5b914691769832a06344e553a5c7e895\" class=\"ne-p\"><br></p><p id=\"745c75df46308c5a92b981e99d1eb225\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\">现在没人批评多页面的设计，可能是因为 roam research 现在成了显学吧，人们向来不敢轻易去 diss 显学，他们还是比较喜欢捏幕布这种国产软柿子。看来，我又要被迫当出头鸟了。</span></p><p id=\"4afcc295673bb6c938e117374dfba19b\" class=\"ne-p\"><br></p><p id=\"12de3b298372db0f44e91c54bd9bf0f7\" class=\"ne-p\" style=\"text-align: left\"><strong><span class=\"ne-text\">在没有添加内部链接的时候</span></strong><span class=\"ne-text\">，roam research 的「多页面+大纲编辑器」就是标准得不能再标准的树状结构，而只要它是树，在结构调整的灵活性上一定是被 workflowy 吊打的。我知道，把话说到这里已经能让很多人按捺不住了，一闭上眼睛我就能想象出一些看不清面容的读者比划着双手，嘴里「网状，网状」地叫着，像极了 1925 年猿猴诉讼案法庭现场那些举起圣经高喊 &quot;This book! This booook!&quot; 来反对进化论的陪审团成员。</span></p><p id=\"54937fe8d088da6d9152fc1932ea1931\" class=\"ne-p\"><br></p><p id=\"5aa9a1dad0ddaa2c9176a024a2b8104a\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\">内部链接在下面会说到，但是现在要先说一种比「结构」更高层次的分析视角。workflowy 的内容单元是节点（bullets），无论采用何种结构来组织这些节点，都只是在内部打转。所以如果把镜头拉远，可以从「空间」的角度来看待这些节点。像 workflowy 里有很多个节点，所有节点全都存在于同一个空间里，这个空间实际上就是「我的 workflowy 账号」，整个空间里的所有节点既可以随便移动，也可以随便聚合成局部小树，也可以选择不组织。</span><strong><span class=\"ne-text\">但如果引入了「页面」这个概念，相当于把整个空间强制切分了，跨页面的节点移动变得不自由，而这种不自由是毫无必要的</span></strong><span class=\"ne-text\">。</span></p><p id=\"57ed305f1c190c36b61fbca2ddd33981\" class=\"ne-p\"><br></p><p id=\"f6d025bec3e4fc4ae87692e59a233e81\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\">只要思想稍微开放一点点，就能意识到 workflowy 根目录的每个节点也都可以取名叫页面 A 页面 B 页面 C，点进这些“页面”、其内部又是一个大纲编辑器，这样一来在拓扑关系上跟 roam research 就是一模一样的。可是 workflowy 根目录的这些节点还可以轻易拆分重组或移动到任何下级位置，其它节点也可以拆分重组然后轻易变成根目录的“页面”，这种巨大的灵活性是 roam research 那种真正的页面无论如何也赶不上的。</span></p><p id=\"cced4969264169c7a1888f01a2b0f4da\" class=\"ne-p\"><br></p><p id=\"095aa71b4a791e8beef3a1ec3fcab460\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\">没错，roam research 有内部链接、反向链接和嵌入，可这些功能对「结构调整」没有半点帮助，它们只对「结构生成」有帮助。现在 workflowy 也有了内部链接、反向链接和 mirror，稍微发挥点拓扑想象力就能看出，workflowy 可以实现任何 roam research 能实现的内容结构（单库），而且在调整重构的时候一定比 roam research 更灵活。</span></p><p id=\"a9f5cc80e1a81e778f56242eb0bf59b7\" class=\"ne-p\"><br></p><p id=\"53edcd145e5b291bc6dc254170774616\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\">所以我才会说多页面这个设计是个败笔，但上面的理由甚至还不是全部，后面还会进一步细说。</span></p><p id=\"bd46f8d0d947175360947f414aa94581\" class=\"ne-p\"><br></p><p id=\"ddb7b11486b02461981948f5dd7c057f\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\">在这 diss 了半天，难道对基于大纲编辑器的笔记软件来说，多页面真的就一点好处都没有吗，没有好处 roam research 为什么要这么做？</span></p><p id=\"3d629bc8e382fe667441e53464dffc9c\" class=\"ne-p\"><br></p><p id=\"13bbb3e7898934956e1e61880919e104\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\">其实原因也很好推测，首先，不是所有人都能接受灵活的「一页」设计，多数人还是得稍微受点束缚才会觉得自在。其次，引入了页面这个概念之后，关系图谱就好做了，图谱的边界条件直接定死了，daily notes 也能直接有个特殊层级来摆放了。还有一个好处就是标签语法糖，引入无法分类的页面之后，</span><code class=\"ne-code\"><span class=\"ne-text\">#名称 = [[名称]]</span></code><span class=\"ne-text\"> 这种标签语法糖就呼之欲出了。标签语法糖挺好的，但是标签本来也可以直接用 </span><code class=\"ne-code\"><span class=\"ne-text\">[[名称]]</span></code><span class=\"ne-text\"> 来代替，前两点也不是非得靠多页面来解决，所以多页面依然是败笔。</span></p><p id=\"7d31c8c177832a670d639a1005cc1e69\" class=\"ne-p\"><br></p><p id=\"04114054ff401c1cc83266f51a28ae7e\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\">但是「多页面」的病毒已经传播得很广了，有没有办法弥补？试图在 roam research 或其它大纲型双链软件里只用一个页面肯定是行不通的，它们在性能上顶不住，而且手感又差，真要这么用不如直接用 workflowy。所以大纲双链模仿品们不得不另想一些手段，remnote、roam edit 和 hypernotes 都做了一些亡羊补牢的尝试，其中 remnote 补得最好，但还是不够自然直观。</span></p><p id=\"f7897a062effb134b860870b45511d6c\" class=\"ne-p\"><br></p><p id=\"0dee854d2366486c8d796494bd773d7f\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\">在大纲型双链笔记软件集体走偏的环境下，本来就是「多页面」文档型双链软件就更不会有动力去改进这个问题了，然而思源笔记正是在这种环境下成功走上了未曾设想的正确道路。</span></p><p id=\"1c98583e38d79d2bf5bdaae66d4931c2\" class=\"ne-p\"><br></p><p id=\"8d3fbd5e2fe2047ea082449c5fe8a2c6\" class=\"ne-p\"><span class=\"ne-text\">（接下一段：破壁与统一）</span></p></div>",
  "slug": 33217581,
  "title": "过时素材，勿点"
}