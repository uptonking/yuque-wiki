{
  "body_html": "<!doctype html><div class=\"lake-content\" typography=\"classic\"><h1 id=\"vaSc2\"><span class=\"ne-text\">数据自由</span></h1><p id=\"89ae25f61e186b8f4bdd10f51497d6e3\" class=\"ne-p\"><br></p><p id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\" class=\"ne-p\"><span class=\"ne-text\">database 是 notion 里的特殊对象，它的功能是把某几个已经存在的 page 用某个视图展示，比如看板。看板当然是一种有用的视图，问题是 database 跟 notion 的耦合程度太高了，存储看板结构的关键信息是 property，说得更准确一点，是「notion 的 property」，这些数据一旦离开 notion 就无法直接还原出原来的看板面貌；再跟 roam 比较一下，同样是看板，roam 的做法是把一个现成的转换函数套到一个节点上，节点下的大纲条目被展示为一个看板，存储看板结构的关键信息就是大纲，而大纲数据的通用性极高，解析难度也低，在前端直接把数据复制到葫芦笔记之类的模仿品里就能重现看板，而直接在前端复制一个 database 是不可能的，只能依赖导出。但即使导出了也没什么用，因为别的产品导入不了。</span></p><p id=\"60aa5207a82664772f1f99122af28c9a\" class=\"ne-p\"><br></p><h1 id=\"U2Tsr\"><span class=\"ne-text\">作用域</span></h1><p id=\"d119574902d01dfbcee3edaf47b59da1\" class=\"ne-p\"><br></p><p id=\"0023347562f965be3f95e50c9c89f85e\" class=\"ne-p\"><span class=\"ne-text\">database 还有一个更大的硬伤，如果想把某个 page 放到某个看板视图或表格视图中，这个 page 就必须被放进某个 database 里，也就是说，它不能再存在于别的地方，它就是为了这个 database 而生的，notion 的 page 在移出 database 之后属性虽然不会消失，但是属性的创建、查看和修改都必须在 database 里进行。而 roam 的成千上万个节点并不需要为某个视图转移自己原来的位置，比如要为某个话题新建一个看板，那就直接新建一个节点，然后在下方引用整个内容库里的任意几个节点，然后在这里把节点转换成看板就行了，</span><strong><span class=\"ne-text\">这些节点的本体全都不需要移动，而视图却可以放置于任何位置并引用任意节点</span></strong><span class=\"ne-text\">，这种巨大的灵活性是 notion 那种 database 根本比不上的。基于文档的软件也能这么玩，Obsidian 现在开放了三方插件，也许可以出现文档粒度的视图插件，而思源笔记已经有了块级属性，想做视图也可以做，而且它们都不存在属性与 database 直接绑定的问题。</span></p><p id=\"81c70c14e1ab1922a4e9cc8fd6fe92fe\" class=\"ne-p\"><br></p><p id=\"1f91e835ad0f899c065e7feeb462bba8\" class=\"ne-p\"><span class=\"ne-text\">而且现在 notion 的 database 里那几个视图 roam 完全可以全部照抄过去，前端的呈现大家都一样，大纲数据又更通用更好解析（所以能参与新视图尝试的产品更多），要搞视图堆砌竞赛的话被拖垮的只会是 database。现在 database 看上去视图种类多出两个，但只要将来 roam 再简简单单堆砌新增几个节点视图函数，database 这种组织方式根本没有一战之力。database 也不是不能把里面的 page 给改成引用，但是这样做会造成一些交互逻辑的冲突，而且无论是从代码维护的角度还是从功能使用的角度都没有优势。</span></p><p id=\"da40e60cd562dc11878abbdd0b84d4d3\" class=\"ne-p\"><br></p><h1 id=\"Go6h2\"><span class=\"ne-text\">筛选</span></h1><p id=\"b8e80118366503207269c5bc089232a1\" class=\"ne-p\"><br></p><p id=\"32eb3f9f4547ea7862262cf8f3d140d3\" class=\"ne-p\"><span class=\"ne-text\">假如你开发一个聊天软件，加入表情功能和图片发送功能是天经地义的事情，同样，database 做筛选功能也是天经地义的事情，为什么那么多人都觉得这是什么了不起的突破呢？</span><strong><span class=\"ne-text\">但凡用过 OmniFocus MyLifeOrganized 等正经 GTD 软件，就不会觉得 database 的筛选和保存筛选是多么特别的功能</span></strong><span class=\"ne-text\">。我个人觉得这个东西实在是过于天经地义，就没在以前的正文里多写，但是别人都回复我说 database 的价值不在于单纯的视图展示，可能我不该把某些内容当成基本共识省略不写，以后尽量做到至少提一句吧。再举个夸张点的类比例子，你们去洗车，店员洗完车「竟然」还顺便帮你们把车擦干了 ，这是什么值得惊叹或表扬的事吗？</span></p><p id=\"4a7c6d0bdeaeab899e810aaacf1a76b4\" class=\"ne-p\"><br></p><p id=\"09efae3ad58b4e672f19ee95082b05f0\" class=\"ne-p\"><span class=\"ne-text\">既然筛选是天经地义的，那为什么 roam 之类的软件还没给现有视图加入这个功能呢？第一，开发精力没充足到那种程度，第二，舆论积累不足，第三，引入 meta info 可能涉及到标准的制定。不是因为想不到，也不是因为做不了。而且 attributes 实际上已经在 roam 的计划中了，logseq 更是很早就引入了它，就连思源这种基于本地 md 文件的软件都已经加入了块属性，细粒度属性这个东西本来就没跟 database 或者 notion 这个软件绑定，而且别人的全局属性比局限在 database 里的属性更灵活。</span></p><p id=\"44f36d03bc66bc88f0a6fe523f289ce1\" class=\"ne-p\"><br></p><h1 id=\"VF6ns\"><span class=\"ne-text\">视图的话语权不归 notion</span></h1><p id=\"4cfb2badadd259e84c0e1e4cacb5e617\" class=\"ne-p\"><br></p><p id=\"6105f426205a6d4c71b51bc6f829a1cd\" class=\"ne-p\"><span class=\"ne-text\">另一方面，「视图」不是只有 notion 里已经实现的这几种，还有其它的可能，比如说这种</span><a href=\"https://zhuanlan.zhihu.com/p/289356513\" data-href=\"https://zhuanlan.zhihu.com/p/289356513\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">卡片排列方式</span></a><span class=\"ne-text\">，同样是有实用价值的视图，这类视图也不一定需要筛选功能，只要有开发精力完全可以在现有的这些软件上实现。</span></p><p id=\"u9c4a11d5\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"ufecddd60\" class=\"ne-p\"><span class=\"ne-text\">在「把笔记数据变成视图」这件事上，</span><a href=\"https://www.yuque.com/arvinxx/note/airtable#JuMxx\" data-href=\"https://www.yuque.com/arvinxx/note/airtable#JuMxx\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">Airtable 的 scripting app</span></a><span class=\"ne-text\"> 应该是做得最好的， notion 的功能不少，但是把 database 单独拿出来看的话，肯定是被 Airtable 吊打的。其它笔记类软件要把「数据 - 视图」的转换功能做到 Airtable 这么优秀也不太现实，但是也可以模仿 </span><span class=\"ne-text\" style=\"color: rgb(18, 18, 18); font-size: 15px\">scripting app</span><span class=\"ne-text\"> 思路，让用户自己定制，把数据变成视图。（ref：</span><a href=\"https://www.yuque.com/deerain/gannbs/kga20n\" data-href=\"https://www.yuque.com/deerain/gannbs/kga20n\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">widget block</span></a><span class=\"ne-text\">）</span></p><p id=\"u3934b8c8\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u7b777043\" class=\"ne-p\"><span class=\"ne-text\">只要舆论积累到位了，意愿到位了，视图的制高点谁都可以去抢，特别是对现在的双链笔记来说，真正实用的视图应该是 tiddlymap、trilium 的 realtion map note、piggydb、以及上面提到的卡片桌面这类的手动排布视图，只要谁敢先做出来（关键是这并不难）马上就能终结对双链笔记图谱的探索。</span></p><p id=\"34c4568817cc6a6d2b2099fe16c2d20f\" class=\"ne-p\"><br></p></div>",
  "slug": 19363975,
  "title": "冒死分析：Notion 的 database 是一个应该被淘汰的过渡品"
}