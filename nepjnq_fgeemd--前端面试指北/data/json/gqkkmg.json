{
  "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-classic\" data-lake-element=\"root\" data-selection-undefined=\"%7B%22path%22%3A%5B%5B0%2C0%2C12%5D%2C%5B0%2C0%2C12%5D%5D%2C%22active%22%3Atrue%7D\"><h4 data-lake-id=\"b20a10c9bd619d273511f38ef63ce54c\" id=\"ttxlL\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 16px; line-height: 24px;\">子域名共享 cookie</h4><p data-lake-id=\"8be35266d145f38d5f1426b6f6b6b7cf\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">将所有站点都设置一个主域名，如 *.baidu.com，所有站点设置 cookie 时都指明 domain: baidu.com，这样 domain 及其子域可以实现 cookies 共享，只需要将登录后的验证信息放入 cookie 即可。这种方法下，server 端要求语言平台一致，同时 cookie 有其不安全性</p><h4 data-lake-id=\"b3554e6e2af5fed0508a552f0d90d347\" id=\"fLSc3\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 16px; line-height: 24px;\">CAS 系统</h4><p data-lake-id=\"633bd5684d61d4328f6a2b4e2f94417d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">参考链接：<a href=\"https://developer.aliyun.com/article/636281\" target=\"_blank\">单点登录（SSO）看这一篇就够了</a></p><p data-lake-id=\"ec9e899696dcd11d121e8727c143f0fb\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">整体流程见<a href=\"https://yqfile.alicdn.com/dcb743204f8a201be53df5338fc34affe5fa1059.png\" target=\"_blank\" class=\"\">图片</a></p><p data-lake-id=\"8cc6e5c3664b85a9b4625610306d853f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">假如有两个不同域名的网站，<a href=\"http://app1.com\" target=\"_blank\">http://app1.com</a>，<a href=\"http://app2.com\" target=\"_blank\" class=\"\">http://app2.com</a>，此时可借助 <a href=\"http://sso.com\" target=\"_blank\" class=\"\">sso.com</a> 实现登录状态管理</p><p data-lake-id=\"f8ee8b383b5261b75154c2787ed8e07d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><strong>首次访问 app1</strong></p><ol data-lake-id=\"450ab40e06af2aaeaf471da3ae31bb94\" start=\"1\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"9984f11ac8febdbedde0d91547a6c515\">用户访问 app1.com，对应域的 cookie 无登录信息，判断用户未登录</li><li data-lake-id=\"ed8ef0e098925a0e327a8a619791c217\">跳转到 sso.com，sso.com cookie 无登录信息（TGT），cas 系统也没有登录，弹出用户登录页，用户信息认证后，生成 ticket granting ticket（TGT），将其放入 sso.com 的 cookie，同时生成一个 service ticket（ST），假设生成了 st1</li><li data-lake-id=\"01c685768d88f59c03ca64dc6ad016c5\">然后跳转回 app1，同时在参数中传递 st1，app1 拿到 st<span>1</span> 后，从后台向 cas 系统发送请求，验证 st1 是否有效，验证通过后，生成登录状态信息响应给 app1.com（比如 session_id），app1.com 将登录状态存在该域下的 cookie 中</li></ol><p data-lake-id=\"c86e2ff4993f5df46f078facbd363ac2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><strong>再次访问 app1</strong></p><p data-lake-id=\"6417537986703658950d7c4624061edb\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">app1.com 的 cookie 中有登录验证信息，与 app1 server 中信息匹配后通过 app1 的验证</p><p data-lake-id=\"026b99b0f4c35f66bc19a196205eb7c4\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><strong>访问 app2</strong></p><ol data-lake-id=\"a1cb2d8d9dc1300c8bff4290bf2e2bed\" start=\"1\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"d37b751862f9947ddde35b060a43d8c4\">用户访问 <span>app2.com</span>，对应域的 cookie 无登录信息，判断用户未登录，同样跳转到 sso.com</li><li data-lake-id=\"1be7185ed8eeb0a74aeb22a01fd19943\">此时 sso.com 的 cookie 中有 TGT，因此直接生成一个 st2</li><li data-lake-id=\"f4ac64d3d37c7d63c796d2721d6de4d2\">跳转回 app2.com，参数中传递 st2，app2 拿到 st2 后，从后台向 cas 系统发送请求，验证 st2 是否有效，验证通过后，生成登录状态信息响应给 app2.com（比如 session_id），app2.com 将<span>登录</span>状态存在该域下的 cookie 中</li></ol><p data-lake-id=\"8ff2595035b256d5c8d2fd719e7b4089\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><strong>小结</strong></p><ul data-lake-id=\"6c6c264884b03ccffb237499203d73f3\" start=\"1\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"0a053d34a06fc530a0ab57acc447e4ed\">用户输入的内容只会参与 cas 登录的验证，业务系统不会参与</li><li data-lake-id=\"5f7cbc0422f8051976cb71dcf3790ed4\">cas 的 cookie 中主要存放 TGT，业务系统 cookie 中存放的是登陆状态</li><li data-lake-id=\"348cb4436f7c0deaaa7648ab69cc8a34\">ST 由 cas 系统下发且不会保存在业务域的 cookie，为了避免用户伪造 ST，必须在正式登录业务系统前向 cas 验证 ST</li></ul></div>",
  "slug": 32823587,
  "title": "单点登录"
}