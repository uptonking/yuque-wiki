{
  "body_html": "<!doctype html><a name=\"富文本编辑器开发系列——-code-textRange--code-对象-code-API--code-详解\"></a><h1 id=\"9db93873\">富文本编辑器开发系列——<code>textRange</code>对象<code>API</code>详解</h1><p><br /></p><a name=\"textRange对象简介\"></a><h2 id=\"e8b3c53f\">textRange对象简介</h2><p><br /></p><p>在<code>IE9</code>浏览器和更早版本的浏览器中，是没有提供用来表示选区的<code>Range</code>对象的<code>API</code>的，但是它们依旧有可编辑区域的相关能力，是因为它们提供了另一个对象接口：<code>textRange</code>对象</p><p><br /></p><a name=\"textRange对象属性与API概览\"></a><h2 id=\"10bc8189\">textRange对象属性与API概览</h2><p><br /></p><p><img src=\"https://gitee.com/hjb2722404/tuchuang/raw/master/img/20201210162002.png#alt=\" style=\"max-width: 600px;\" /></p><p><br /></p><a name=\"textRange-属性详解\"></a><h2 id=\"96884702\">textRange 属性详解</h2><p><br /></p><p>我们先直观地看一下这些属性。</p><p><br /></p><p>我们有下面一段代码：</p><p><br /></p><pre data-lang=\"html\"><code>&lt;body&gt;\n    &lt;div onscroll=&quot;UpdateInfo();&quot; style=&quot;padding: 20px; left: 50px; border:1px solid yellow; width:400px; overflow:scroll; position: relative;&quot;&gt;\n        &lt;div&gt;Select some content within this field.&lt;/div&gt;\n        &lt;div id=&quot;cc&quot;&gt;The coordinates of the selected content's boundary rectangle&lt;/div&gt;\n        &lt;div&gt;are visible in the field below&lt;/div&gt;\n    &lt;/div&gt;\n&lt;/body&gt;</code></pre><p><br /></p><p>再来看页面中选中一个选区后各个属性所指向的</p><p><br /></p><p>从上面的思维导图中，我们可以看到这些属性的简要介绍。但是还有一些要注意的点</p><p><br /></p><a name=\"祖先元素中离它最近的定位元素\"></a><h3 id=\"cb4c5643\">祖先元素中离它最近的定位元素</h3><p><br /></p><p>这其实指的就是的元素的<code>offsetParent</code> 属性指向的元素，也就是说对于当前选中区域所在的<code>textRange</code>对象，会一层一层往上找它的祖先元素，遇到的第一个定位元素。</p><p><br /></p><p>我们可以这样理解，获取到包含元素A的所有祖先元素，然后去除掉这些元素中的非定位元素，剩下的嵌套结构中元素A的父级元素就是它的 <code>offsetParent</code> 属性所指向的元素。</p><p><br /></p><pre data-lang=\"html\"><code>&lt;div class=&quot;1&quot; style=&quot;position: fixed;&quot;&gt;\n  &lt;div class=&quot;2&quot;&gt;\n  \t&lt;div class=&quot;3&quot; style=&quot;position: relative;&quot;&gt;\n  \t\t&lt;div class=&quot;4&quot; &gt;\n  \t\t\t&lt;div class=&quot;5&quot; style=&quot;position: absolute;&quot;&gt;\n \t\t\t\t\t &lt;div class=&quot;6&quot; &gt;\n  \t\t\t\t\t\t&lt;div class=&quot;A&quot;&gt;\n              \t\t这个是元素A  \n             \t&lt;/div&gt;\n\t\t\t\t\t&lt;/div&gt;\n\t\t\t\t&lt;/div&gt;\n\t\t\t&lt;/div&gt;\n\t\t&lt;/div&gt;\n\t&lt;/div&gt;\n&lt;/div&gt;\n\n// 去除非定位元素\n\n&lt;div class=&quot;1&quot; style=&quot;position: fixed;&quot;&gt;\n  \t&lt;div class=&quot;3&quot; style=&quot;position: relative;&quot;&gt;\n  \t\t\t&lt;div class=&quot;5&quot; style=&quot;position: absolute;&quot;&gt;\n  \t\t\t\t\t\t&lt;div class=&quot;A&quot;&gt;\n              \t\t这个是元素A  \n             \t&lt;/div&gt;\n\t\t\t\t&lt;/div&gt;\n\t\t&lt;/div&gt;\n&lt;/div&gt;\n// 元素A的 offsetParent 指向的元素就是 className为 “5”的元素</code></pre><p><br /></p><p>这个属性，有以下原则：</p><p><br /></p><ul><li>如果元素自身的定位方式为<code>fixed</code> 或者<code>display</code>为<code>node</code>，则它的<code>offsetParent</code>为 <code>null</code>；</li></ul><ul><li>如果元素的祖先元素里没有定位元素，并且元素本身没有定位，此时元素的<code>offsetParent</code> 为最近的<code>table/td/th或body</code>元素</li></ul><ul><li>如果元素的祖先元素里没有定位元素，而元素定位为<code>absolute</code>或<code>relative</code> ，分两种情况：\n</li></ul><ul data-lake-indent=\"1\"><li><code>IE7</code>以上和其它现代浏览器中，此时元素的<code>offsetParent</code> 为 最近的<code>table/td/th或body</code>元素；</li></ul><ul data-lake-indent=\"1\"><li><code>IE7</code> 以下版本浏览器中，此时元素的 <code>offsetParent</code> 为最近的<code>table/td/th或html</code>元素；</li></ul>\n<ul><li>如果元素的祖先元素里有定位元素，而元素自身不是<code>fixed</code>定位，则元素的<code>offsetParent</code> 为离它最近的有定位的祖先元素。</li></ul><p><br /></p><p>知道了以上规则，我们就更好理解<code>textRange</code>对象的<code>offsetLeft</code>属性与<code>offsetTop</code>属性了。</p><p><br /></p><p>下面来看下这些属性的表现。</p><p><br /></p><p><strong>本文以下代码示例全部需要在IE9以下版本浏览器中才能正常运行</strong></p><p>运行效果：</p><p><br /></p><p><img src=\"https://gitee.com/hjb2722404/tuchuang/raw/master/img/20201210162024.gif#alt=\" style=\"max-width: 600px;\" /></p><p><br /></p><p>我们拖动后选择的拖蓝区域形成了一个矩形区域，而<code>textRange</code> 对象的几个属性都和这个矩形区域有关：</p><p><br /></p><ul><li><code>boundingLeft</code>： 矩形区域左端到父窗口左边框右侧的坐标距离</li></ul><ul><li><code>boundingTop</code>：矩形区域上端到父窗口上边框下侧的坐标距离</li></ul><ul><li><code>boundingWidth</code> ： 矩形区域的宽度</li></ul><ul><li><code>boundingHeight</code>： 矩形区域的高度</li></ul><ul><li><code>offsetLeft</code>： 矩形区域左端到它最近的定位父级元素的左边框的右侧的距离（这里也是body，所以与left值相等）</li></ul><ul><li><code>offsetTop</code>： 矩形区域上端到它最近的定位父级元素的上边框的下侧的距离（这里也是Body, 所以与 top值相等）</li></ul><p><br /></p><a name=\"方法\"></a><h2 id=\"ea340b9d\">方法</h2><p><br /></p><a name=\"-code-collapse(start)--code-- 闭合拖蓝\"></a><h3 id=\"20b64e4a\"><code>collapse(start)</code>  闭合拖蓝</h3><p><br /></p><p>将拖蓝范围的起点移动到终点，反之亦然，同<code>range</code></p><p><br /></p><p>示例：</p><p><br /></p><p><img src=\"https://gitee.com/hjb2722404/tuchuang/raw/master/img/20201210162045.gif#alt=\" style=\"max-width: 600px;\" /></p><p><br /></p><p>示例说明：</p><p><br /></p><p>我们选中了一个选区‘button is released’，当我们释放鼠标时触发了事件，该事件调用了<code>collapse</code>方法将选区向终点闭合了，为了证明，我们在调用方法后，立即插入了一个按钮的内容，证明插入位置是选区终点处。</p><p><br /></p><a name=\"-code-compareEndPoints--code-- 比较拖蓝与指定对象\"></a><h3 id=\"d4fbe0bf\"><code>compareEndPoints</code>  比较拖蓝与指定对象</h3><p><br /></p><p>语法：<code>object.compareEndPoints(type, rangeToCompare);</code></p><p><br /></p><p>说明：比较另一个拖蓝对象与该拖蓝对象的两个端点的位置关系</p><p><br /></p><p>参数：</p><p><br /></p><ul><li>type： 比较哪两个端点\n</li></ul><ul data-lake-indent=\"1\"><li>EndToEnd:  当前拖蓝的终点与目标对象的终点\n</li></ul><ul data-lake-indent=\"2\"><li>EndToStart: 当前拖蓝的终点与目标对象的起点</li></ul><ul data-lake-indent=\"2\"><li>StartToEnd：当前拖蓝的起点与目标对象的终点</li></ul><ul data-lake-indent=\"2\"><li>StartToStart：当前拖蓝的起点与目标对象的起点</li></ul>\n\n<ul><li>rangeToCompare：要比较的目标拖蓝对象</li></ul><p><br /></p><p>返回值：</p><p><br /></p><ul><li>-1：第一个点在第二个点前面</li></ul><ul><li>0：两个点在同一个位置</li></ul><ul><li>1：第一个点在第二个点后面</li></ul><p><br /></p><p>示例</p><p>示例说明： 我们的目标对象是文本中加粗的部分 ‘bold text’ ，而当前拖蓝对象就是我们鼠标拖动选区的范围，每一次选取，都会触发比较端点的方法，根据该方法返回的值，我们就可以判断出当前拖蓝与目标对象的位置关系。</p><p><br /></p><a name=\"-code-duplicate()--code-- 克隆拖蓝副本\"></a><h3 id=\"0f19715f\"><code>duplicate()</code>  克隆拖蓝副本</h3><p><br /></p><p>语法： <code>object.duplicate();</code></p><p><br /></p><p>说明：返回一个当前拖蓝对象的副本，同 <code>range</code>对象的 <code>cloneRange</code>方法</p><p><br /></p><p>相关示例请移步<a href=\"./\">rangeAPI</a></p><p><br /></p><blockquote><p>由于IE已经事实上出于死亡状态（截止写本文时，微软的Eage浏览器已经使用了谷歌的内核），以下IE下的API不再探讨。只供读者在阅读某些较旧的编辑器源码时当做参考用。</p></blockquote><p><br /></p><a name=\"-code-execCommand()--code--在当前拖蓝上执行命令\"></a><h3 id=\"84522f75\"><code>execCommand()</code> 在当前拖蓝上执行命令</h3><p><br /></p><a name=\"-code-expand--code-- 扩展拖蓝范围\"></a><h3 id=\"cea3b8ae\"><code>expand</code>  扩展拖蓝范围</h3><p><br /></p><a name=\"-code-findText--code--搜索原先拖蓝内的指定文本，并调整拖蓝使其包含第一次匹配的内容\"></a><h3 id=\"4b4ef81f\"><code>findText</code> 搜索原先拖蓝内的指定文本，并调整拖蓝使其包含第一次匹配的内容</h3><p><br /></p><a name=\"-code-getBookmark--code-- 保存当前拖蓝的端点位置\"></a><h3 id=\"72ed3b0c\"><code>getBookmark</code>  保存当前拖蓝的端点位置</h3><p><br /></p><a name=\"-code-getBoundingClientRect--code--返回拖蓝矩形对象相对于浏览器的位置大小信息\"></a><h3 id=\"de1dcbe8\"><code>getBoundingClientRect</code> 返回拖蓝矩形对象相对于浏览器的位置大小信息</h3><p><br /></p><a name=\"-code-getClientRects--code-- 返回当前拖蓝矩形对象形状信息\"></a><h3 id=\"5843be20\"><code>getClientRects</code>  返回当前拖蓝矩形对象形状信息</h3><p><br /></p><a name=\"-code-inRange--code--返回当前拖蓝是否包含指定拖蓝\"></a><h3 id=\"5763f73b\"><code>inRange</code> 返回当前拖蓝是否包含指定拖蓝</h3><p><br /></p><a name=\"-code-isEqual--code--返回当前拖蓝是否与指定拖蓝相等\"></a><h3 id=\"76420b5b\"><code>isEqual</code> 返回当前拖蓝是否与指定拖蓝相等</h3><p><br /></p><a name=\"-code-move--code-- 将拖蓝闭合，并将空白区域移动指定单位数\"></a><h3 id=\"6cae95dd\"><code>move</code>  将拖蓝闭合，并将空白区域移动指定单位数</h3><p><br /></p><a name=\"-code-moveEnd--code-- 将拖蓝结束位置移动指定单位数\"></a><h3 id=\"c6772915\"><code>moveEnd</code>  将拖蓝结束位置移动指定单位数</h3><p><br /></p><a name=\"-code-moveStart--code--将拖蓝的开始位置移动指定单位数\"></a><h3 id=\"3d117dfe\"><code>moveStart</code> 将拖蓝的开始位置移动指定单位数</h3><p><br /></p><a name=\"-code-moveToBookMark--code-- 获取保存的拖蓝位置信息\"></a><h3 id=\"32532891\"><code>moveToBookMark</code>  获取保存的拖蓝位置信息</h3><p><br /></p><a name=\"-code-moveToElementText--code--使拖蓝包含指定元素的文本\"></a><h3 id=\"6d0a580d\"><code>moveToElementText</code> 使拖蓝包含指定元素的文本</h3><p><br /></p><a name=\"-code-moveToPoint--code-- 移动当前拖蓝的起点和终点到指定位置\"></a><h3 id=\"0f4f5ef5\"><code>moveToPoint</code>  移动当前拖蓝的起点和终点到指定位置</h3><p><br /></p><a name=\"-code-parentElement--code-- 返回拖蓝父元素\"></a><h3 id=\"1deb7992\"><code>parentElement</code>  返回拖蓝父元素</h3><p><br /></p><a name=\"-code-pasteHTML--code-- 将HTML粘贴入给定的拖蓝，并替换拖蓝内原先的内容\"></a><h3 id=\"20193fab\"><code>pasteHTML</code>  将HTML粘贴入给定的拖蓝，并替换拖蓝内原先的内容</h3><p><br /></p><a name=\"-code-queryCommandEnabled--code-- 返回表明指定命令是否可用于给定文档当前状态下使用--code-exexCommand--code--命令成功事项的布尔值\"></a><h3 id=\"8be10293\"><code>queryCommandEnabled</code>  返回表明指定命令是否可用于给定文档当前状态下使用 <code>exexCommand</code> 命令成功事项的布尔值</h3><p><br /></p><a name=\"-code-queryCommandState--code-- 返回表明指定命令当前状态的布尔值\"></a><h3 id=\"67c2074c\"><code>queryCommandState</code>  返回表明指定命令当前状态的布尔值</h3><p><br /></p><a name=\"-code-queryCommandValue--code-- 返回表明指定命令当前值的-code-DOMString--code-\"></a><h3 id=\"eab63a63\"><code>queryCommandValue</code>  返回表明指定命令当前值的<code>DOMString</code></h3><p><br /></p><a name=\"-code-scrollIntoView--code--将拖蓝滚动到可视范围内\"></a><h3 id=\"7c4dca4e\"><code>scrollIntoView</code> 将拖蓝滚动到可视范围内</h3><p><br /></p><a name=\"-code-select--code-- 将当前拖蓝选中\"></a><h3 id=\"abcefda7\"><code>select</code>  将当前拖蓝选中</h3><p><br /></p><a name=\"-code-setEndPoint--code-- 根据其它拖蓝的端点设置当前拖蓝的结束点\"></a><h3 id=\"2f349b08\"><code>setEndPoint</code>  根据其它拖蓝的端点设置当前拖蓝的结束点</h3>",
  "slug": 80566413,
  "title": "富文本编辑器开发系列7——textRange对象详解"
}